/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.ahghee.grpc.DataBlock', null, global);
goog.exportSymbol('proto.ahghee.grpc.FilterOperator', null, global);
goog.exportSymbol('proto.ahghee.grpc.FilterOperator.Compare', null, global);
goog.exportSymbol('proto.ahghee.grpc.FilterOperator.CompareCompound', null, global);
goog.exportSymbol('proto.ahghee.grpc.FilterOperator.CompareKeyValue', null, global);
goog.exportSymbol('proto.ahghee.grpc.FollowOperator', null, global);
goog.exportSymbol('proto.ahghee.grpc.FollowOperator.EdgeCMP', null, global);
goog.exportSymbol('proto.ahghee.grpc.FollowOperator.EdgeNum', null, global);
goog.exportSymbol('proto.ahghee.grpc.FollowOperator.EdgeRange', null, global);
goog.exportSymbol('proto.ahghee.grpc.FollowOperator.FollowAny', null, global);
goog.exportSymbol('proto.ahghee.grpc.GetMetricsRequest', null, global);
goog.exportSymbol('proto.ahghee.grpc.GetMetricsResponse', null, global);
goog.exportSymbol('proto.ahghee.grpc.GetMetricsResponse.Metric', null, global);
goog.exportSymbol('proto.ahghee.grpc.GetStatsRequest', null, global);
goog.exportSymbol('proto.ahghee.grpc.GetStatsRequest.Stat', null, global);
goog.exportSymbol('proto.ahghee.grpc.GetStatsResponse', null, global);
goog.exportSymbol('proto.ahghee.grpc.KeyValue', null, global);
goog.exportSymbol('proto.ahghee.grpc.ListPoliciesRequest', null, global);
goog.exportSymbol('proto.ahghee.grpc.ListPoliciesResponse', null, global);
goog.exportSymbol('proto.ahghee.grpc.ListStatsRequest', null, global);
goog.exportSymbol('proto.ahghee.grpc.ListStatsResponse', null, global);
goog.exportSymbol('proto.ahghee.grpc.MemoryPointer', null, global);
goog.exportSymbol('proto.ahghee.grpc.Node', null, global);
goog.exportSymbol('proto.ahghee.grpc.NodeID', null, global);
goog.exportSymbol('proto.ahghee.grpc.Pointers', null, global);
goog.exportSymbol('proto.ahghee.grpc.PutResponse', null, global);
goog.exportSymbol('proto.ahghee.grpc.Query', null, global);
goog.exportSymbol('proto.ahghee.grpc.Range', null, global);
goog.exportSymbol('proto.ahghee.grpc.Step', null, global);
goog.exportSymbol('proto.ahghee.grpc.TMD', null, global);
goog.exportSymbol('proto.ahghee.grpc.TypeBytes', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.MemoryPointer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.MemoryPointer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.MemoryPointer.displayName = 'proto.ahghee.grpc.MemoryPointer';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.MemoryPointer.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.MemoryPointer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.MemoryPointer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.MemoryPointer.toObject = function(includeInstance, msg) {
  var f, obj = {
    partitionkey: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filename: jspb.Message.getFieldWithDefault(msg, 2, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 3, 0),
    length: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.MemoryPointer}
 */
proto.ahghee.grpc.MemoryPointer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.MemoryPointer;
  return proto.ahghee.grpc.MemoryPointer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.MemoryPointer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.MemoryPointer}
 */
proto.ahghee.grpc.MemoryPointer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setPartitionkey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setFilename(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.MemoryPointer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.MemoryPointer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.MemoryPointer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.MemoryPointer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartitionkey();
  if (f !== 0) {
    writer.writeFixed32(
      1,
      f
    );
  }
  f = message.getFilename();
  if (f !== 0) {
    writer.writeFixed32(
      2,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeFixed64(
      3,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeFixed64(
      4,
      f
    );
  }
};


/**
 * optional fixed32 partitionkey = 1;
 * @return {number}
 */
proto.ahghee.grpc.MemoryPointer.prototype.getPartitionkey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ahghee.grpc.MemoryPointer.prototype.setPartitionkey = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional fixed32 filename = 2;
 * @return {number}
 */
proto.ahghee.grpc.MemoryPointer.prototype.getFilename = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ahghee.grpc.MemoryPointer.prototype.setFilename = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed64 offset = 3;
 * @return {number}
 */
proto.ahghee.grpc.MemoryPointer.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.ahghee.grpc.MemoryPointer.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional fixed64 length = 4;
 * @return {number}
 */
proto.ahghee.grpc.MemoryPointer.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ahghee.grpc.MemoryPointer.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.TypeBytes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.TypeBytes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.TypeBytes.displayName = 'proto.ahghee.grpc.TypeBytes';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.TypeBytes.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.TypeBytes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.TypeBytes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.TypeBytes.toObject = function(includeInstance, msg) {
  var f, obj = {
    typeiri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.TypeBytes}
 */
proto.ahghee.grpc.TypeBytes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.TypeBytes;
  return proto.ahghee.grpc.TypeBytes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.TypeBytes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.TypeBytes}
 */
proto.ahghee.grpc.TypeBytes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeiri(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.TypeBytes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.TypeBytes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.TypeBytes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.TypeBytes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypeiri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string typeiri = 1;
 * @return {string}
 */
proto.ahghee.grpc.TypeBytes.prototype.getTypeiri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ahghee.grpc.TypeBytes.prototype.setTypeiri = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.ahghee.grpc.TypeBytes.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes bytes = 2;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.ahghee.grpc.TypeBytes.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.TypeBytes.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.ahghee.grpc.TypeBytes.prototype.setBytes = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.NodeID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.NodeID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.NodeID.displayName = 'proto.ahghee.grpc.NodeID';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.NodeID.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.NodeID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.NodeID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.NodeID.toObject = function(includeInstance, msg) {
  var f, obj = {
    remote: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pointer: (f = msg.getPointer()) && proto.ahghee.grpc.MemoryPointer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.NodeID}
 */
proto.ahghee.grpc.NodeID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.NodeID;
  return proto.ahghee.grpc.NodeID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.NodeID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.NodeID}
 */
proto.ahghee.grpc.NodeID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemote(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIri(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.MemoryPointer;
      reader.readMessage(value,proto.ahghee.grpc.MemoryPointer.deserializeBinaryFromReader);
      msg.setPointer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.NodeID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.NodeID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.NodeID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.NodeID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemote();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPointer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ahghee.grpc.MemoryPointer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string remote = 1;
 * @return {string}
 */
proto.ahghee.grpc.NodeID.prototype.getRemote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ahghee.grpc.NodeID.prototype.setRemote = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string iri = 2;
 * @return {string}
 */
proto.ahghee.grpc.NodeID.prototype.getIri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ahghee.grpc.NodeID.prototype.setIri = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MemoryPointer pointer = 3;
 * @return {?proto.ahghee.grpc.MemoryPointer}
 */
proto.ahghee.grpc.NodeID.prototype.getPointer = function() {
  return /** @type{?proto.ahghee.grpc.MemoryPointer} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.MemoryPointer, 3));
};


/** @param {?proto.ahghee.grpc.MemoryPointer|undefined} value */
proto.ahghee.grpc.NodeID.prototype.setPointer = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.NodeID.prototype.clearPointer = function() {
  this.setPointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.NodeID.prototype.hasPointer = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.DataBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ahghee.grpc.DataBlock.oneofGroups_);
};
goog.inherits(proto.ahghee.grpc.DataBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.DataBlock.displayName = 'proto.ahghee.grpc.DataBlock';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ahghee.grpc.DataBlock.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11]];

/**
 * @enum {number}
 */
proto.ahghee.grpc.DataBlock.DataCase = {
  DATA_NOT_SET: 0,
  NODEID: 1,
  METABYTES: 2,
  STR: 3,
  I32: 4,
  I64: 5,
  UI32: 6,
  UI64: 7,
  D: 8,
  F: 9,
  B: 10,
  MEMORYPOINTER: 11
};

/**
 * @return {proto.ahghee.grpc.DataBlock.DataCase}
 */
proto.ahghee.grpc.DataBlock.prototype.getDataCase = function() {
  return /** @type {proto.ahghee.grpc.DataBlock.DataCase} */(jspb.Message.computeOneofCase(this, proto.ahghee.grpc.DataBlock.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.DataBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.DataBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.DataBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.DataBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeid: (f = msg.getNodeid()) && proto.ahghee.grpc.NodeID.toObject(includeInstance, f),
    metabytes: (f = msg.getMetabytes()) && proto.ahghee.grpc.TypeBytes.toObject(includeInstance, f),
    str: jspb.Message.getFieldWithDefault(msg, 3, ""),
    i32: jspb.Message.getFieldWithDefault(msg, 4, 0),
    i64: jspb.Message.getFieldWithDefault(msg, 5, 0),
    ui32: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ui64: jspb.Message.getFieldWithDefault(msg, 7, 0),
    d: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    f: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    b: jspb.Message.getFieldWithDefault(msg, 10, false),
    memorypointer: (f = msg.getMemorypointer()) && proto.ahghee.grpc.MemoryPointer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.DataBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.DataBlock;
  return proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.DataBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.NodeID;
      reader.readMessage(value,proto.ahghee.grpc.NodeID.deserializeBinaryFromReader);
      msg.setNodeid(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.TypeBytes;
      reader.readMessage(value,proto.ahghee.grpc.TypeBytes.deserializeBinaryFromReader);
      msg.setMetabytes(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setI32(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setI64(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUi32(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUi64(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setD(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setF(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setB(value);
      break;
    case 11:
      var value = new proto.ahghee.grpc.MemoryPointer;
      reader.readMessage(value,proto.ahghee.grpc.MemoryPointer.deserializeBinaryFromReader);
      msg.setMemorypointer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.DataBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.DataBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.DataBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.DataBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.NodeID.serializeBinaryToWriter
    );
  }
  f = message.getMetabytes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.TypeBytes.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getMemorypointer();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.ahghee.grpc.MemoryPointer.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeID nodeid = 1;
 * @return {?proto.ahghee.grpc.NodeID}
 */
proto.ahghee.grpc.DataBlock.prototype.getNodeid = function() {
  return /** @type{?proto.ahghee.grpc.NodeID} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.NodeID, 1));
};


/** @param {?proto.ahghee.grpc.NodeID|undefined} value */
proto.ahghee.grpc.DataBlock.prototype.setNodeid = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearNodeid = function() {
  this.setNodeid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasNodeid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TypeBytes metabytes = 2;
 * @return {?proto.ahghee.grpc.TypeBytes}
 */
proto.ahghee.grpc.DataBlock.prototype.getMetabytes = function() {
  return /** @type{?proto.ahghee.grpc.TypeBytes} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.TypeBytes, 2));
};


/** @param {?proto.ahghee.grpc.TypeBytes|undefined} value */
proto.ahghee.grpc.DataBlock.prototype.setMetabytes = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearMetabytes = function() {
  this.setMetabytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasMetabytes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string str = 3;
 * @return {string}
 */
proto.ahghee.grpc.DataBlock.prototype.getStr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ahghee.grpc.DataBlock.prototype.setStr = function(value) {
  jspb.Message.setOneofField(this, 3, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearStr = function() {
  jspb.Message.setOneofField(this, 3, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasStr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 i32 = 4;
 * @return {number}
 */
proto.ahghee.grpc.DataBlock.prototype.getI32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.ahghee.grpc.DataBlock.prototype.setI32 = function(value) {
  jspb.Message.setOneofField(this, 4, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearI32 = function() {
  jspb.Message.setOneofField(this, 4, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasI32 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 i64 = 5;
 * @return {number}
 */
proto.ahghee.grpc.DataBlock.prototype.getI64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.ahghee.grpc.DataBlock.prototype.setI64 = function(value) {
  jspb.Message.setOneofField(this, 5, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearI64 = function() {
  jspb.Message.setOneofField(this, 5, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasI64 = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 ui32 = 6;
 * @return {number}
 */
proto.ahghee.grpc.DataBlock.prototype.getUi32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.ahghee.grpc.DataBlock.prototype.setUi32 = function(value) {
  jspb.Message.setOneofField(this, 6, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearUi32 = function() {
  jspb.Message.setOneofField(this, 6, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasUi32 = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 ui64 = 7;
 * @return {number}
 */
proto.ahghee.grpc.DataBlock.prototype.getUi64 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.ahghee.grpc.DataBlock.prototype.setUi64 = function(value) {
  jspb.Message.setOneofField(this, 7, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearUi64 = function() {
  jspb.Message.setOneofField(this, 7, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasUi64 = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional double d = 8;
 * @return {number}
 */
proto.ahghee.grpc.DataBlock.prototype.getD = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.ahghee.grpc.DataBlock.prototype.setD = function(value) {
  jspb.Message.setOneofField(this, 8, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearD = function() {
  jspb.Message.setOneofField(this, 8, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasD = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float f = 9;
 * @return {number}
 */
proto.ahghee.grpc.DataBlock.prototype.getF = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.ahghee.grpc.DataBlock.prototype.setF = function(value) {
  jspb.Message.setOneofField(this, 9, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearF = function() {
  jspb.Message.setOneofField(this, 9, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasF = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool b = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.getB = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.ahghee.grpc.DataBlock.prototype.setB = function(value) {
  jspb.Message.setOneofField(this, 10, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearB = function() {
  jspb.Message.setOneofField(this, 10, proto.ahghee.grpc.DataBlock.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasB = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional MemoryPointer memorypointer = 11;
 * @return {?proto.ahghee.grpc.MemoryPointer}
 */
proto.ahghee.grpc.DataBlock.prototype.getMemorypointer = function() {
  return /** @type{?proto.ahghee.grpc.MemoryPointer} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.MemoryPointer, 11));
};


/** @param {?proto.ahghee.grpc.MemoryPointer|undefined} value */
proto.ahghee.grpc.DataBlock.prototype.setMemorypointer = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.ahghee.grpc.DataBlock.oneofGroups_[0], value);
};


proto.ahghee.grpc.DataBlock.prototype.clearMemorypointer = function() {
  this.setMemorypointer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.DataBlock.prototype.hasMemorypointer = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.TMD = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.TMD, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.TMD.displayName = 'proto.ahghee.grpc.TMD';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.TMD.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.TMD.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.TMD} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.TMD.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    metadata: (f = msg.getMetadata()) && proto.ahghee.grpc.DataBlock.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.ahghee.grpc.DataBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.TMD}
 */
proto.ahghee.grpc.TMD.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.TMD;
  return proto.ahghee.grpc.TMD.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.TMD} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.TMD}
 */
proto.ahghee.grpc.TMD.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.DataBlock;
      reader.readMessage(value,proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.DataBlock;
      reader.readMessage(value,proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.TMD.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.TMD.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.TMD} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.TMD.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.DataBlock.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ahghee.grpc.DataBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 Timestamp = 1;
 * @return {number}
 */
proto.ahghee.grpc.TMD.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ahghee.grpc.TMD.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional DataBlock MetaData = 2;
 * @return {?proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.TMD.prototype.getMetadata = function() {
  return /** @type{?proto.ahghee.grpc.DataBlock} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.DataBlock, 2));
};


/** @param {?proto.ahghee.grpc.DataBlock|undefined} value */
proto.ahghee.grpc.TMD.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ahghee.grpc.TMD.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.TMD.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional DataBlock Data = 3;
 * @return {?proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.TMD.prototype.getData = function() {
  return /** @type{?proto.ahghee.grpc.DataBlock} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.DataBlock, 3));
};


/** @param {?proto.ahghee.grpc.DataBlock|undefined} value */
proto.ahghee.grpc.TMD.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.TMD.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.TMD.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.KeyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.KeyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.KeyValue.displayName = 'proto.ahghee.grpc.KeyValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.KeyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.KeyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.KeyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.KeyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.ahghee.grpc.TMD.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.ahghee.grpc.TMD.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.KeyValue}
 */
proto.ahghee.grpc.KeyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.KeyValue;
  return proto.ahghee.grpc.KeyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.KeyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.KeyValue}
 */
proto.ahghee.grpc.KeyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.TMD;
      reader.readMessage(value,proto.ahghee.grpc.TMD.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.TMD;
      reader.readMessage(value,proto.ahghee.grpc.TMD.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.KeyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.KeyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.KeyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.KeyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.TMD.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.TMD.serializeBinaryToWriter
    );
  }
};


/**
 * optional TMD key = 1;
 * @return {?proto.ahghee.grpc.TMD}
 */
proto.ahghee.grpc.KeyValue.prototype.getKey = function() {
  return /** @type{?proto.ahghee.grpc.TMD} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.TMD, 1));
};


/** @param {?proto.ahghee.grpc.TMD|undefined} value */
proto.ahghee.grpc.KeyValue.prototype.setKey = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.KeyValue.prototype.clearKey = function() {
  this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.KeyValue.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TMD value = 2;
 * @return {?proto.ahghee.grpc.TMD}
 */
proto.ahghee.grpc.KeyValue.prototype.getValue = function() {
  return /** @type{?proto.ahghee.grpc.TMD} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.TMD, 2));
};


/** @param {?proto.ahghee.grpc.TMD|undefined} value */
proto.ahghee.grpc.KeyValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ahghee.grpc.KeyValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.KeyValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.Node = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.Node.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.Node, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.Node.displayName = 'proto.ahghee.grpc.Node';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.Node.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.Node.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.Node.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.Node} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Node.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && proto.ahghee.grpc.NodeID.toObject(includeInstance, f),
    fragmentsList: jspb.Message.toObjectList(msg.getFragmentsList(),
    proto.ahghee.grpc.MemoryPointer.toObject, includeInstance),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.ahghee.grpc.KeyValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.Node}
 */
proto.ahghee.grpc.Node.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.Node;
  return proto.ahghee.grpc.Node.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.Node} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.Node}
 */
proto.ahghee.grpc.Node.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.NodeID;
      reader.readMessage(value,proto.ahghee.grpc.NodeID.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.MemoryPointer;
      reader.readMessage(value,proto.ahghee.grpc.MemoryPointer.deserializeBinaryFromReader);
      msg.addFragments(value);
      break;
    case 4:
      var value = new proto.ahghee.grpc.KeyValue;
      reader.readMessage(value,proto.ahghee.grpc.KeyValue.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.Node.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.Node.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.Node} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Node.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.NodeID.serializeBinaryToWriter
    );
  }
  f = message.getFragmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ahghee.grpc.MemoryPointer.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.ahghee.grpc.KeyValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional NodeID id = 1;
 * @return {?proto.ahghee.grpc.NodeID}
 */
proto.ahghee.grpc.Node.prototype.getId = function() {
  return /** @type{?proto.ahghee.grpc.NodeID} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.NodeID, 1));
};


/** @param {?proto.ahghee.grpc.NodeID|undefined} value */
proto.ahghee.grpc.Node.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.Node.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.Node.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated MemoryPointer fragments = 3;
 * @return {!Array<!proto.ahghee.grpc.MemoryPointer>}
 */
proto.ahghee.grpc.Node.prototype.getFragmentsList = function() {
  return /** @type{!Array<!proto.ahghee.grpc.MemoryPointer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ahghee.grpc.MemoryPointer, 3));
};


/** @param {!Array<!proto.ahghee.grpc.MemoryPointer>} value */
proto.ahghee.grpc.Node.prototype.setFragmentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ahghee.grpc.MemoryPointer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ahghee.grpc.MemoryPointer}
 */
proto.ahghee.grpc.Node.prototype.addFragments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ahghee.grpc.MemoryPointer, opt_index);
};


proto.ahghee.grpc.Node.prototype.clearFragmentsList = function() {
  this.setFragmentsList([]);
};


/**
 * repeated KeyValue attributes = 4;
 * @return {!Array<!proto.ahghee.grpc.KeyValue>}
 */
proto.ahghee.grpc.Node.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.ahghee.grpc.KeyValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ahghee.grpc.KeyValue, 4));
};


/** @param {!Array<!proto.ahghee.grpc.KeyValue>} value */
proto.ahghee.grpc.Node.prototype.setAttributesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ahghee.grpc.KeyValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ahghee.grpc.KeyValue}
 */
proto.ahghee.grpc.Node.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ahghee.grpc.KeyValue, opt_index);
};


proto.ahghee.grpc.Node.prototype.clearAttributesList = function() {
  this.setAttributesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.Pointers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.Pointers.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.Pointers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.Pointers.displayName = 'proto.ahghee.grpc.Pointers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.Pointers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.Pointers.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.Pointers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.Pointers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Pointers.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointersList: jspb.Message.toObjectList(msg.getPointersList(),
    proto.ahghee.grpc.MemoryPointer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.Pointers}
 */
proto.ahghee.grpc.Pointers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.Pointers;
  return proto.ahghee.grpc.Pointers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.Pointers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.Pointers}
 */
proto.ahghee.grpc.Pointers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.MemoryPointer;
      reader.readMessage(value,proto.ahghee.grpc.MemoryPointer.deserializeBinaryFromReader);
      msg.addPointers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.Pointers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.Pointers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.Pointers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Pointers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ahghee.grpc.MemoryPointer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MemoryPointer pointers = 1;
 * @return {!Array<!proto.ahghee.grpc.MemoryPointer>}
 */
proto.ahghee.grpc.Pointers.prototype.getPointersList = function() {
  return /** @type{!Array<!proto.ahghee.grpc.MemoryPointer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ahghee.grpc.MemoryPointer, 1));
};


/** @param {!Array<!proto.ahghee.grpc.MemoryPointer>} value */
proto.ahghee.grpc.Pointers.prototype.setPointersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ahghee.grpc.MemoryPointer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ahghee.grpc.MemoryPointer}
 */
proto.ahghee.grpc.Pointers.prototype.addPointers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ahghee.grpc.MemoryPointer, opt_index);
};


proto.ahghee.grpc.Pointers.prototype.clearPointersList = function() {
  this.setPointersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.Range.displayName = 'proto.ahghee.grpc.Range';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.Range}
 */
proto.ahghee.grpc.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.Range;
  return proto.ahghee.grpc.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.Range}
 */
proto.ahghee.grpc.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 from = 1;
 * @return {number}
 */
proto.ahghee.grpc.Range.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.ahghee.grpc.Range.prototype.setFrom = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 to = 2;
 * @return {number}
 */
proto.ahghee.grpc.Range.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.ahghee.grpc.Range.prototype.setTo = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FollowOperator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ahghee.grpc.FollowOperator.oneofGroups_);
};
goog.inherits(proto.ahghee.grpc.FollowOperator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FollowOperator.displayName = 'proto.ahghee.grpc.FollowOperator';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ahghee.grpc.FollowOperator.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ahghee.grpc.FollowOperator.FollowCase = {
  FOLLOW_NOT_SET: 0,
  FOLLOWANY: 1,
  FOLLOWEDGE: 2
};

/**
 * @return {proto.ahghee.grpc.FollowOperator.FollowCase}
 */
proto.ahghee.grpc.FollowOperator.prototype.getFollowCase = function() {
  return /** @type {proto.ahghee.grpc.FollowOperator.FollowCase} */(jspb.Message.computeOneofCase(this, proto.ahghee.grpc.FollowOperator.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FollowOperator.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FollowOperator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FollowOperator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.toObject = function(includeInstance, msg) {
  var f, obj = {
    followany: (f = msg.getFollowany()) && proto.ahghee.grpc.FollowOperator.FollowAny.toObject(includeInstance, f),
    followedge: (f = msg.getFollowedge()) && proto.ahghee.grpc.FollowOperator.EdgeNum.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FollowOperator}
 */
proto.ahghee.grpc.FollowOperator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FollowOperator;
  return proto.ahghee.grpc.FollowOperator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FollowOperator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FollowOperator}
 */
proto.ahghee.grpc.FollowOperator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FollowOperator.FollowAny;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.FollowAny.deserializeBinaryFromReader);
      msg.setFollowany(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.FollowOperator.EdgeNum;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.EdgeNum.deserializeBinaryFromReader);
      msg.setFollowedge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FollowOperator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FollowOperator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FollowOperator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFollowany();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FollowOperator.FollowAny.serializeBinaryToWriter
    );
  }
  f = message.getFollowedge();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.FollowOperator.EdgeNum.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FollowOperator.FollowAny = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.FollowOperator.FollowAny, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FollowOperator.FollowAny.displayName = 'proto.ahghee.grpc.FollowOperator.FollowAny';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FollowOperator.FollowAny.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FollowOperator.FollowAny.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FollowOperator.FollowAny} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.FollowAny.toObject = function(includeInstance, msg) {
  var f, obj = {
    range: (f = msg.getRange()) && proto.ahghee.grpc.Range.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FollowOperator.FollowAny}
 */
proto.ahghee.grpc.FollowOperator.FollowAny.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FollowOperator.FollowAny;
  return proto.ahghee.grpc.FollowOperator.FollowAny.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FollowOperator.FollowAny} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FollowOperator.FollowAny}
 */
proto.ahghee.grpc.FollowOperator.FollowAny.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.Range;
      reader.readMessage(value,proto.ahghee.grpc.Range.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FollowOperator.FollowAny.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FollowOperator.FollowAny.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FollowOperator.FollowAny} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.FollowAny.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.Range.serializeBinaryToWriter
    );
  }
};


/**
 * optional Range range = 1;
 * @return {?proto.ahghee.grpc.Range}
 */
proto.ahghee.grpc.FollowOperator.FollowAny.prototype.getRange = function() {
  return /** @type{?proto.ahghee.grpc.Range} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.Range, 1));
};


/** @param {?proto.ahghee.grpc.Range|undefined} value */
proto.ahghee.grpc.FollowOperator.FollowAny.prototype.setRange = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.FollowOperator.FollowAny.prototype.clearRange = function() {
  this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.FollowAny.prototype.hasRange = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FollowOperator.EdgeRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.FollowOperator.EdgeRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FollowOperator.EdgeRange.displayName = 'proto.ahghee.grpc.FollowOperator.EdgeRange';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FollowOperator.EdgeRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    edge: (f = msg.getEdge()) && proto.ahghee.grpc.DataBlock.toObject(includeInstance, f),
    range: (f = msg.getRange()) && proto.ahghee.grpc.Range.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FollowOperator.EdgeRange}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FollowOperator.EdgeRange;
  return proto.ahghee.grpc.FollowOperator.EdgeRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FollowOperator.EdgeRange}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.DataBlock;
      reader.readMessage(value,proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader);
      msg.setEdge(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.Range;
      reader.readMessage(value,proto.ahghee.grpc.Range.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FollowOperator.EdgeRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdge();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.DataBlock.serializeBinaryToWriter
    );
  }
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.Range.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataBlock edge = 1;
 * @return {?proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.getEdge = function() {
  return /** @type{?proto.ahghee.grpc.DataBlock} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.DataBlock, 1));
};


/** @param {?proto.ahghee.grpc.DataBlock|undefined} value */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.setEdge = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.clearEdge = function() {
  this.setEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.hasEdge = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Range range = 2;
 * @return {?proto.ahghee.grpc.Range}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.getRange = function() {
  return /** @type{?proto.ahghee.grpc.Range} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.Range, 2));
};


/** @param {?proto.ahghee.grpc.Range|undefined} value */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.setRange = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.clearRange = function() {
  this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.EdgeRange.prototype.hasRange = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.FollowOperator.EdgeCMP, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FollowOperator.EdgeCMP.displayName = 'proto.ahghee.grpc.FollowOperator.EdgeCMP';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FollowOperator.EdgeCMP.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeCMP} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.toObject = function(includeInstance, msg) {
  var f, obj = {
    left: (f = msg.getLeft()) && proto.ahghee.grpc.FollowOperator.EdgeNum.toObject(includeInstance, f),
    boolop: jspb.Message.getFieldWithDefault(msg, 2, ""),
    right: (f = msg.getRight()) && proto.ahghee.grpc.FollowOperator.EdgeNum.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FollowOperator.EdgeCMP}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FollowOperator.EdgeCMP;
  return proto.ahghee.grpc.FollowOperator.EdgeCMP.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeCMP} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FollowOperator.EdgeCMP}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FollowOperator.EdgeNum;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.EdgeNum.deserializeBinaryFromReader);
      msg.setLeft(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoolop(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.FollowOperator.EdgeNum;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.EdgeNum.deserializeBinaryFromReader);
      msg.setRight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FollowOperator.EdgeCMP.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeCMP} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeft();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FollowOperator.EdgeNum.serializeBinaryToWriter
    );
  }
  f = message.getBoolop();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ahghee.grpc.FollowOperator.EdgeNum.serializeBinaryToWriter
    );
  }
};


/**
 * optional EdgeNum left = 1;
 * @return {?proto.ahghee.grpc.FollowOperator.EdgeNum}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.getLeft = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator.EdgeNum} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator.EdgeNum, 1));
};


/** @param {?proto.ahghee.grpc.FollowOperator.EdgeNum|undefined} value */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.setLeft = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.clearLeft = function() {
  this.setLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.hasLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string BOOLOP = 2;
 * @return {string}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.getBoolop = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.setBoolop = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EdgeNum right = 3;
 * @return {?proto.ahghee.grpc.FollowOperator.EdgeNum}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.getRight = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator.EdgeNum} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator.EdgeNum, 3));
};


/** @param {?proto.ahghee.grpc.FollowOperator.EdgeNum|undefined} value */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.setRight = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.clearRight = function() {
  this.setRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.EdgeCMP.prototype.hasRight = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FollowOperator.EdgeNum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ahghee.grpc.FollowOperator.EdgeNum.oneofGroups_);
};
goog.inherits(proto.ahghee.grpc.FollowOperator.EdgeNum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FollowOperator.EdgeNum.displayName = 'proto.ahghee.grpc.FollowOperator.EdgeNum';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.OpCase = {
  OP_NOT_SET: 0,
  EDGERANGE: 1,
  EDGECMP: 2
};

/**
 * @return {proto.ahghee.grpc.FollowOperator.EdgeNum.OpCase}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.getOpCase = function() {
  return /** @type {proto.ahghee.grpc.FollowOperator.EdgeNum.OpCase} */(jspb.Message.computeOneofCase(this, proto.ahghee.grpc.FollowOperator.EdgeNum.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FollowOperator.EdgeNum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeNum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgerange: (f = msg.getEdgerange()) && proto.ahghee.grpc.FollowOperator.EdgeRange.toObject(includeInstance, f),
    edgecmp: (f = msg.getEdgecmp()) && proto.ahghee.grpc.FollowOperator.EdgeCMP.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FollowOperator.EdgeNum}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FollowOperator.EdgeNum;
  return proto.ahghee.grpc.FollowOperator.EdgeNum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeNum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FollowOperator.EdgeNum}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FollowOperator.EdgeRange;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.EdgeRange.deserializeBinaryFromReader);
      msg.setEdgerange(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.FollowOperator.EdgeCMP;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.EdgeCMP.deserializeBinaryFromReader);
      msg.setEdgecmp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FollowOperator.EdgeNum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FollowOperator.EdgeNum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgerange();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FollowOperator.EdgeRange.serializeBinaryToWriter
    );
  }
  f = message.getEdgecmp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.FollowOperator.EdgeCMP.serializeBinaryToWriter
    );
  }
};


/**
 * optional EdgeRange edgeRange = 1;
 * @return {?proto.ahghee.grpc.FollowOperator.EdgeRange}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.getEdgerange = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator.EdgeRange} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator.EdgeRange, 1));
};


/** @param {?proto.ahghee.grpc.FollowOperator.EdgeRange|undefined} value */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.setEdgerange = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ahghee.grpc.FollowOperator.EdgeNum.oneofGroups_[0], value);
};


proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.clearEdgerange = function() {
  this.setEdgerange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.hasEdgerange = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EdgeCMP edgeCmp = 2;
 * @return {?proto.ahghee.grpc.FollowOperator.EdgeCMP}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.getEdgecmp = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator.EdgeCMP} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator.EdgeCMP, 2));
};


/** @param {?proto.ahghee.grpc.FollowOperator.EdgeCMP|undefined} value */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.setEdgecmp = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ahghee.grpc.FollowOperator.EdgeNum.oneofGroups_[0], value);
};


proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.clearEdgecmp = function() {
  this.setEdgecmp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.EdgeNum.prototype.hasEdgecmp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FollowAny followAny = 1;
 * @return {?proto.ahghee.grpc.FollowOperator.FollowAny}
 */
proto.ahghee.grpc.FollowOperator.prototype.getFollowany = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator.FollowAny} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator.FollowAny, 1));
};


/** @param {?proto.ahghee.grpc.FollowOperator.FollowAny|undefined} value */
proto.ahghee.grpc.FollowOperator.prototype.setFollowany = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ahghee.grpc.FollowOperator.oneofGroups_[0], value);
};


proto.ahghee.grpc.FollowOperator.prototype.clearFollowany = function() {
  this.setFollowany(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.prototype.hasFollowany = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EdgeNum followEdge = 2;
 * @return {?proto.ahghee.grpc.FollowOperator.EdgeNum}
 */
proto.ahghee.grpc.FollowOperator.prototype.getFollowedge = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator.EdgeNum} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator.EdgeNum, 2));
};


/** @param {?proto.ahghee.grpc.FollowOperator.EdgeNum|undefined} value */
proto.ahghee.grpc.FollowOperator.prototype.setFollowedge = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ahghee.grpc.FollowOperator.oneofGroups_[0], value);
};


proto.ahghee.grpc.FollowOperator.prototype.clearFollowedge = function() {
  this.setFollowedge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FollowOperator.prototype.hasFollowedge = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FilterOperator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.FilterOperator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FilterOperator.displayName = 'proto.ahghee.grpc.FilterOperator';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FilterOperator.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FilterOperator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FilterOperator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.toObject = function(includeInstance, msg) {
  var f, obj = {
    compare: (f = msg.getCompare()) && proto.ahghee.grpc.FilterOperator.Compare.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FilterOperator}
 */
proto.ahghee.grpc.FilterOperator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FilterOperator;
  return proto.ahghee.grpc.FilterOperator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FilterOperator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FilterOperator}
 */
proto.ahghee.grpc.FilterOperator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FilterOperator.Compare;
      reader.readMessage(value,proto.ahghee.grpc.FilterOperator.Compare.deserializeBinaryFromReader);
      msg.setCompare(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FilterOperator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FilterOperator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FilterOperator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompare();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FilterOperator.Compare.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FilterOperator.Compare = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ahghee.grpc.FilterOperator.Compare.oneofGroups_);
};
goog.inherits(proto.ahghee.grpc.FilterOperator.Compare, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FilterOperator.Compare.displayName = 'proto.ahghee.grpc.FilterOperator.Compare';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ahghee.grpc.FilterOperator.Compare.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ahghee.grpc.FilterOperator.Compare.CmptypeCase = {
  CMPTYPE_NOT_SET: 0,
  KEVVALUECMP: 1,
  COMPOUNDCMP: 2
};

/**
 * @return {proto.ahghee.grpc.FilterOperator.Compare.CmptypeCase}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.getCmptypeCase = function() {
  return /** @type {proto.ahghee.grpc.FilterOperator.Compare.CmptypeCase} */(jspb.Message.computeOneofCase(this, proto.ahghee.grpc.FilterOperator.Compare.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FilterOperator.Compare.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FilterOperator.Compare} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.Compare.toObject = function(includeInstance, msg) {
  var f, obj = {
    kevvaluecmp: (f = msg.getKevvaluecmp()) && proto.ahghee.grpc.FilterOperator.CompareKeyValue.toObject(includeInstance, f),
    compoundcmp: (f = msg.getCompoundcmp()) && proto.ahghee.grpc.FilterOperator.CompareCompound.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FilterOperator.Compare}
 */
proto.ahghee.grpc.FilterOperator.Compare.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FilterOperator.Compare;
  return proto.ahghee.grpc.FilterOperator.Compare.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FilterOperator.Compare} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FilterOperator.Compare}
 */
proto.ahghee.grpc.FilterOperator.Compare.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FilterOperator.CompareKeyValue;
      reader.readMessage(value,proto.ahghee.grpc.FilterOperator.CompareKeyValue.deserializeBinaryFromReader);
      msg.setKevvaluecmp(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.FilterOperator.CompareCompound;
      reader.readMessage(value,proto.ahghee.grpc.FilterOperator.CompareCompound.deserializeBinaryFromReader);
      msg.setCompoundcmp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FilterOperator.Compare.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FilterOperator.Compare} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.Compare.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKevvaluecmp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FilterOperator.CompareKeyValue.serializeBinaryToWriter
    );
  }
  f = message.getCompoundcmp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.FilterOperator.CompareCompound.serializeBinaryToWriter
    );
  }
};


/**
 * optional CompareKeyValue kevValueCmp = 1;
 * @return {?proto.ahghee.grpc.FilterOperator.CompareKeyValue}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.getKevvaluecmp = function() {
  return /** @type{?proto.ahghee.grpc.FilterOperator.CompareKeyValue} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FilterOperator.CompareKeyValue, 1));
};


/** @param {?proto.ahghee.grpc.FilterOperator.CompareKeyValue|undefined} value */
proto.ahghee.grpc.FilterOperator.Compare.prototype.setKevvaluecmp = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ahghee.grpc.FilterOperator.Compare.oneofGroups_[0], value);
};


proto.ahghee.grpc.FilterOperator.Compare.prototype.clearKevvaluecmp = function() {
  this.setKevvaluecmp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.hasKevvaluecmp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CompareCompound compoundCmp = 2;
 * @return {?proto.ahghee.grpc.FilterOperator.CompareCompound}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.getCompoundcmp = function() {
  return /** @type{?proto.ahghee.grpc.FilterOperator.CompareCompound} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FilterOperator.CompareCompound, 2));
};


/** @param {?proto.ahghee.grpc.FilterOperator.CompareCompound|undefined} value */
proto.ahghee.grpc.FilterOperator.Compare.prototype.setCompoundcmp = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ahghee.grpc.FilterOperator.Compare.oneofGroups_[0], value);
};


proto.ahghee.grpc.FilterOperator.Compare.prototype.clearCompoundcmp = function() {
  this.setCompoundcmp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.Compare.prototype.hasCompoundcmp = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.FilterOperator.CompareKeyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FilterOperator.CompareKeyValue.displayName = 'proto.ahghee.grpc.FilterOperator.CompareKeyValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FilterOperator.CompareKeyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FilterOperator.CompareKeyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    property: (f = msg.getProperty()) && proto.ahghee.grpc.DataBlock.toObject(includeInstance, f),
    mathop: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: (f = msg.getValue()) && proto.ahghee.grpc.DataBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FilterOperator.CompareKeyValue}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FilterOperator.CompareKeyValue;
  return proto.ahghee.grpc.FilterOperator.CompareKeyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FilterOperator.CompareKeyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FilterOperator.CompareKeyValue}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.DataBlock;
      reader.readMessage(value,proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader);
      msg.setProperty(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMathop(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.DataBlock;
      reader.readMessage(value,proto.ahghee.grpc.DataBlock.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FilterOperator.CompareKeyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FilterOperator.CompareKeyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProperty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.DataBlock.serializeBinaryToWriter
    );
  }
  f = message.getMathop();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ahghee.grpc.DataBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional DataBlock Property = 1;
 * @return {?proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.getProperty = function() {
  return /** @type{?proto.ahghee.grpc.DataBlock} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.DataBlock, 1));
};


/** @param {?proto.ahghee.grpc.DataBlock|undefined} value */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.setProperty = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.clearProperty = function() {
  this.setProperty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.hasProperty = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string MATHOP = 2;
 * @return {string}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.getMathop = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.setMathop = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional DataBlock Value = 3;
 * @return {?proto.ahghee.grpc.DataBlock}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.getValue = function() {
  return /** @type{?proto.ahghee.grpc.DataBlock} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.DataBlock, 3));
};


/** @param {?proto.ahghee.grpc.DataBlock|undefined} value */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.CompareKeyValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.FilterOperator.CompareCompound = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.FilterOperator.CompareCompound, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.FilterOperator.CompareCompound.displayName = 'proto.ahghee.grpc.FilterOperator.CompareCompound';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.FilterOperator.CompareCompound.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.FilterOperator.CompareCompound} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.toObject = function(includeInstance, msg) {
  var f, obj = {
    left: (f = msg.getLeft()) && proto.ahghee.grpc.FilterOperator.Compare.toObject(includeInstance, f),
    boolop: jspb.Message.getFieldWithDefault(msg, 2, ""),
    right: (f = msg.getRight()) && proto.ahghee.grpc.FilterOperator.Compare.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.FilterOperator.CompareCompound}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.FilterOperator.CompareCompound;
  return proto.ahghee.grpc.FilterOperator.CompareCompound.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.FilterOperator.CompareCompound} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.FilterOperator.CompareCompound}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FilterOperator.Compare;
      reader.readMessage(value,proto.ahghee.grpc.FilterOperator.Compare.deserializeBinaryFromReader);
      msg.setLeft(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoolop(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.FilterOperator.Compare;
      reader.readMessage(value,proto.ahghee.grpc.FilterOperator.Compare.deserializeBinaryFromReader);
      msg.setRight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.FilterOperator.CompareCompound.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.FilterOperator.CompareCompound} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLeft();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FilterOperator.Compare.serializeBinaryToWriter
    );
  }
  f = message.getBoolop();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRight();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ahghee.grpc.FilterOperator.Compare.serializeBinaryToWriter
    );
  }
};


/**
 * optional Compare left = 1;
 * @return {?proto.ahghee.grpc.FilterOperator.Compare}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.getLeft = function() {
  return /** @type{?proto.ahghee.grpc.FilterOperator.Compare} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FilterOperator.Compare, 1));
};


/** @param {?proto.ahghee.grpc.FilterOperator.Compare|undefined} value */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.setLeft = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.clearLeft = function() {
  this.setLeft(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.hasLeft = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string BOOLOP = 2;
 * @return {string}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.getBoolop = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.setBoolop = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Compare right = 3;
 * @return {?proto.ahghee.grpc.FilterOperator.Compare}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.getRight = function() {
  return /** @type{?proto.ahghee.grpc.FilterOperator.Compare} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FilterOperator.Compare, 3));
};


/** @param {?proto.ahghee.grpc.FilterOperator.Compare|undefined} value */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.setRight = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.clearRight = function() {
  this.setRight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.CompareCompound.prototype.hasRight = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Compare compare = 1;
 * @return {?proto.ahghee.grpc.FilterOperator.Compare}
 */
proto.ahghee.grpc.FilterOperator.prototype.getCompare = function() {
  return /** @type{?proto.ahghee.grpc.FilterOperator.Compare} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FilterOperator.Compare, 1));
};


/** @param {?proto.ahghee.grpc.FilterOperator.Compare|undefined} value */
proto.ahghee.grpc.FilterOperator.prototype.setCompare = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.FilterOperator.prototype.clearCompare = function() {
  this.setCompare(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.FilterOperator.prototype.hasCompare = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.Step = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.ahghee.grpc.Step.oneofGroups_);
};
goog.inherits(proto.ahghee.grpc.Step, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.Step.displayName = 'proto.ahghee.grpc.Step';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.ahghee.grpc.Step.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.ahghee.grpc.Step.OperatorCase = {
  OPERATOR_NOT_SET: 0,
  FOLLOW: 1,
  WHERE: 2
};

/**
 * @return {proto.ahghee.grpc.Step.OperatorCase}
 */
proto.ahghee.grpc.Step.prototype.getOperatorCase = function() {
  return /** @type {proto.ahghee.grpc.Step.OperatorCase} */(jspb.Message.computeOneofCase(this, proto.ahghee.grpc.Step.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.Step.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.Step.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.Step} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Step.toObject = function(includeInstance, msg) {
  var f, obj = {
    follow: (f = msg.getFollow()) && proto.ahghee.grpc.FollowOperator.toObject(includeInstance, f),
    where: (f = msg.getWhere()) && proto.ahghee.grpc.FilterOperator.toObject(includeInstance, f),
    next: (f = msg.getNext()) && proto.ahghee.grpc.Step.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.Step}
 */
proto.ahghee.grpc.Step.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.Step;
  return proto.ahghee.grpc.Step.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.Step} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.Step}
 */
proto.ahghee.grpc.Step.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.FollowOperator;
      reader.readMessage(value,proto.ahghee.grpc.FollowOperator.deserializeBinaryFromReader);
      msg.setFollow(value);
      break;
    case 2:
      var value = new proto.ahghee.grpc.FilterOperator;
      reader.readMessage(value,proto.ahghee.grpc.FilterOperator.deserializeBinaryFromReader);
      msg.setWhere(value);
      break;
    case 3:
      var value = new proto.ahghee.grpc.Step;
      reader.readMessage(value,proto.ahghee.grpc.Step.deserializeBinaryFromReader);
      msg.setNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.Step.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.Step.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.Step} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Step.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFollow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.FollowOperator.serializeBinaryToWriter
    );
  }
  f = message.getWhere();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ahghee.grpc.FilterOperator.serializeBinaryToWriter
    );
  }
  f = message.getNext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.ahghee.grpc.Step.serializeBinaryToWriter
    );
  }
};


/**
 * optional FollowOperator follow = 1;
 * @return {?proto.ahghee.grpc.FollowOperator}
 */
proto.ahghee.grpc.Step.prototype.getFollow = function() {
  return /** @type{?proto.ahghee.grpc.FollowOperator} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FollowOperator, 1));
};


/** @param {?proto.ahghee.grpc.FollowOperator|undefined} value */
proto.ahghee.grpc.Step.prototype.setFollow = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.ahghee.grpc.Step.oneofGroups_[0], value);
};


proto.ahghee.grpc.Step.prototype.clearFollow = function() {
  this.setFollow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.Step.prototype.hasFollow = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FilterOperator where = 2;
 * @return {?proto.ahghee.grpc.FilterOperator}
 */
proto.ahghee.grpc.Step.prototype.getWhere = function() {
  return /** @type{?proto.ahghee.grpc.FilterOperator} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.FilterOperator, 2));
};


/** @param {?proto.ahghee.grpc.FilterOperator|undefined} value */
proto.ahghee.grpc.Step.prototype.setWhere = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.ahghee.grpc.Step.oneofGroups_[0], value);
};


proto.ahghee.grpc.Step.prototype.clearWhere = function() {
  this.setWhere(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.Step.prototype.hasWhere = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Step next = 3;
 * @return {?proto.ahghee.grpc.Step}
 */
proto.ahghee.grpc.Step.prototype.getNext = function() {
  return /** @type{?proto.ahghee.grpc.Step} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.Step, 3));
};


/** @param {?proto.ahghee.grpc.Step|undefined} value */
proto.ahghee.grpc.Step.prototype.setNext = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.Step.prototype.clearNext = function() {
  this.setNext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.Step.prototype.hasNext = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.Query.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.Query.displayName = 'proto.ahghee.grpc.Query';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.Query.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    step: (f = msg.getStep()) && proto.ahghee.grpc.Step.toObject(includeInstance, f),
    irisList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.Query}
 */
proto.ahghee.grpc.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.Query;
  return proto.ahghee.grpc.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.Query}
 */
proto.ahghee.grpc.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.Step;
      reader.readMessage(value,proto.ahghee.grpc.Step.deserializeBinaryFromReader);
      msg.setStep(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addIris(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStep();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ahghee.grpc.Step.serializeBinaryToWriter
    );
  }
  f = message.getIrisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional Step step = 1;
 * @return {?proto.ahghee.grpc.Step}
 */
proto.ahghee.grpc.Query.prototype.getStep = function() {
  return /** @type{?proto.ahghee.grpc.Step} */ (
    jspb.Message.getWrapperField(this, proto.ahghee.grpc.Step, 1));
};


/** @param {?proto.ahghee.grpc.Step|undefined} value */
proto.ahghee.grpc.Query.prototype.setStep = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.ahghee.grpc.Query.prototype.clearStep = function() {
  this.setStep(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.Query.prototype.hasStep = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string iris = 2;
 * @return {!Array<string>}
 */
proto.ahghee.grpc.Query.prototype.getIrisList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.ahghee.grpc.Query.prototype.setIrisList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ahghee.grpc.Query.prototype.addIris = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.ahghee.grpc.Query.prototype.clearIrisList = function() {
  this.setIrisList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.PutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.PutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.PutResponse.displayName = 'proto.ahghee.grpc.PutResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.PutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.PutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.PutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.PutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.PutResponse}
 */
proto.ahghee.grpc.PutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.PutResponse;
  return proto.ahghee.grpc.PutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.PutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.PutResponse}
 */
proto.ahghee.grpc.PutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.PutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.PutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.PutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.PutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.ahghee.grpc.PutResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.ahghee.grpc.PutResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.GetMetricsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.GetMetricsResponse.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.GetMetricsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.GetMetricsResponse.displayName = 'proto.ahghee.grpc.GetMetricsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.GetMetricsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.GetMetricsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.GetMetricsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.GetMetricsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetMetricsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricsList: jspb.Message.toObjectList(msg.getMetricsList(),
    proto.ahghee.grpc.GetMetricsResponse.Metric.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.GetMetricsResponse}
 */
proto.ahghee.grpc.GetMetricsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.GetMetricsResponse;
  return proto.ahghee.grpc.GetMetricsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.GetMetricsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.GetMetricsResponse}
 */
proto.ahghee.grpc.GetMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.GetMetricsResponse.Metric;
      reader.readMessage(value,proto.ahghee.grpc.GetMetricsResponse.Metric.deserializeBinaryFromReader);
      msg.addMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.GetMetricsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.GetMetricsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.GetMetricsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetMetricsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ahghee.grpc.GetMetricsResponse.Metric.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.GetMetricsResponse.Metric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.GetMetricsResponse.Metric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.GetMetricsResponse.Metric.displayName = 'proto.ahghee.grpc.GetMetricsResponse.Metric';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.GetMetricsResponse.Metric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.GetMetricsResponse.Metric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.GetMetricsResponse.Metric}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.GetMetricsResponse.Metric;
  return proto.ahghee.grpc.GetMetricsResponse.Metric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.GetMetricsResponse.Metric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.GetMetricsResponse.Metric}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.GetMetricsResponse.Metric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.GetMetricsResponse.Metric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional float value = 1;
 * @return {number}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.setValue = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ahghee.grpc.GetMetricsResponse.Metric.prototype.hasTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Metric metrics = 1;
 * @return {!Array<!proto.ahghee.grpc.GetMetricsResponse.Metric>}
 */
proto.ahghee.grpc.GetMetricsResponse.prototype.getMetricsList = function() {
  return /** @type{!Array<!proto.ahghee.grpc.GetMetricsResponse.Metric>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ahghee.grpc.GetMetricsResponse.Metric, 1));
};


/** @param {!Array<!proto.ahghee.grpc.GetMetricsResponse.Metric>} value */
proto.ahghee.grpc.GetMetricsResponse.prototype.setMetricsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ahghee.grpc.GetMetricsResponse.Metric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ahghee.grpc.GetMetricsResponse.Metric}
 */
proto.ahghee.grpc.GetMetricsResponse.prototype.addMetrics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ahghee.grpc.GetMetricsResponse.Metric, opt_index);
};


proto.ahghee.grpc.GetMetricsResponse.prototype.clearMetricsList = function() {
  this.setMetricsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.GetMetricsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.GetMetricsRequest.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.GetMetricsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.GetMetricsRequest.displayName = 'proto.ahghee.grpc.GetMetricsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.GetMetricsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.GetMetricsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.GetMetricsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.GetMetricsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetMetricsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.GetMetricsRequest}
 */
proto.ahghee.grpc.GetMetricsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.GetMetricsRequest;
  return proto.ahghee.grpc.GetMetricsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.GetMetricsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.GetMetricsRequest}
 */
proto.ahghee.grpc.GetMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.GetMetricsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.GetMetricsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.GetMetricsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetMetricsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.ahghee.grpc.GetMetricsRequest.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.ahghee.grpc.GetMetricsRequest.prototype.setNamesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ahghee.grpc.GetMetricsRequest.prototype.addNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.ahghee.grpc.GetMetricsRequest.prototype.clearNamesList = function() {
  this.setNamesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.GetStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.GetStatsRequest.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.GetStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.GetStatsRequest.displayName = 'proto.ahghee.grpc.GetStatsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.GetStatsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.GetStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.GetStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.GetStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    statsList: jspb.Message.toObjectList(msg.getStatsList(),
    proto.ahghee.grpc.GetStatsRequest.Stat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.GetStatsRequest}
 */
proto.ahghee.grpc.GetStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.GetStatsRequest;
  return proto.ahghee.grpc.GetStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.GetStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.GetStatsRequest}
 */
proto.ahghee.grpc.GetStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.GetStatsRequest.Stat;
      reader.readMessage(value,proto.ahghee.grpc.GetStatsRequest.Stat.deserializeBinaryFromReader);
      msg.addStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.GetStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.GetStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.GetStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ahghee.grpc.GetStatsRequest.Stat.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.GetStatsRequest.Stat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ahghee.grpc.GetStatsRequest.Stat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.GetStatsRequest.Stat.displayName = 'proto.ahghee.grpc.GetStatsRequest.Stat';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.GetStatsRequest.Stat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.GetStatsRequest.Stat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetStatsRequest.Stat.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    topic: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stat: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.GetStatsRequest.Stat}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.GetStatsRequest.Stat;
  return proto.ahghee.grpc.GetStatsRequest.Stat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.GetStatsRequest.Stat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.GetStatsRequest.Stat}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopic(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.GetStatsRequest.Stat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.GetStatsRequest.Stat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetStatsRequest.Stat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getTopic();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStat();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional float value = 1;
 * @return {number}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.getValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.setValue = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string topic = 2;
 * @return {string}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.getTopic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.setTopic = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stat = 3;
 * @return {string}
 */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.getStat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ahghee.grpc.GetStatsRequest.Stat.prototype.setStat = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Stat stats = 1;
 * @return {!Array<!proto.ahghee.grpc.GetStatsRequest.Stat>}
 */
proto.ahghee.grpc.GetStatsRequest.prototype.getStatsList = function() {
  return /** @type{!Array<!proto.ahghee.grpc.GetStatsRequest.Stat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ahghee.grpc.GetStatsRequest.Stat, 1));
};


/** @param {!Array<!proto.ahghee.grpc.GetStatsRequest.Stat>} value */
proto.ahghee.grpc.GetStatsRequest.prototype.setStatsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ahghee.grpc.GetStatsRequest.Stat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ahghee.grpc.GetStatsRequest.Stat}
 */
proto.ahghee.grpc.GetStatsRequest.prototype.addStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ahghee.grpc.GetStatsRequest.Stat, opt_index);
};


proto.ahghee.grpc.GetStatsRequest.prototype.clearStatsList = function() {
  this.setStatsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.GetStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.GetStatsResponse.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.GetStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.GetStatsResponse.displayName = 'proto.ahghee.grpc.GetStatsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.GetStatsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.GetStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.GetStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.GetStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.GetStatsResponse}
 */
proto.ahghee.grpc.GetStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.GetStatsResponse;
  return proto.ahghee.grpc.GetStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.GetStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.GetStatsResponse}
 */
proto.ahghee.grpc.GetStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.GetStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.GetStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.GetStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.GetStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.ahghee.grpc.GetStatsResponse.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.ahghee.grpc.GetStatsResponse.prototype.setNamesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ahghee.grpc.GetStatsResponse.prototype.addNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.ahghee.grpc.GetStatsResponse.prototype.clearNamesList = function() {
  this.setNamesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.ListStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.ListStatsRequest.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.ListStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.ListStatsRequest.displayName = 'proto.ahghee.grpc.ListStatsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.ListStatsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.ListStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.ListStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.ListStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.ListStatsRequest}
 */
proto.ahghee.grpc.ListStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.ListStatsRequest;
  return proto.ahghee.grpc.ListStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.ListStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.ListStatsRequest}
 */
proto.ahghee.grpc.ListStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.ListStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.ListStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.ListStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string match = 1;
 * @return {!Array<string>}
 */
proto.ahghee.grpc.ListStatsRequest.prototype.getMatchList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.ahghee.grpc.ListStatsRequest.prototype.setMatchList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ahghee.grpc.ListStatsRequest.prototype.addMatch = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.ahghee.grpc.ListStatsRequest.prototype.clearMatchList = function() {
  this.setMatchList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.ListStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.ListStatsResponse.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.ListStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.ListStatsResponse.displayName = 'proto.ahghee.grpc.ListStatsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.ListStatsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.ListStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.ListStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.ListStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    namesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.ListStatsResponse}
 */
proto.ahghee.grpc.ListStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.ListStatsResponse;
  return proto.ahghee.grpc.ListStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.ListStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.ListStatsResponse}
 */
proto.ahghee.grpc.ListStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.ListStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.ListStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.ListStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string names = 1;
 * @return {!Array<string>}
 */
proto.ahghee.grpc.ListStatsResponse.prototype.getNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.ahghee.grpc.ListStatsResponse.prototype.setNamesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ahghee.grpc.ListStatsResponse.prototype.addNames = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.ahghee.grpc.ListStatsResponse.prototype.clearNamesList = function() {
  this.setNamesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.ListPoliciesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.ListPoliciesRequest.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.ListPoliciesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.ListPoliciesRequest.displayName = 'proto.ahghee.grpc.ListPoliciesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.ListPoliciesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.ListPoliciesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.ListPoliciesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.ListPoliciesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListPoliciesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    irisList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.ListPoliciesRequest}
 */
proto.ahghee.grpc.ListPoliciesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.ListPoliciesRequest;
  return proto.ahghee.grpc.ListPoliciesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.ListPoliciesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.ListPoliciesRequest}
 */
proto.ahghee.grpc.ListPoliciesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIris(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.ListPoliciesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.ListPoliciesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.ListPoliciesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListPoliciesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIrisList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string iris = 1;
 * @return {!Array<string>}
 */
proto.ahghee.grpc.ListPoliciesRequest.prototype.getIrisList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.ahghee.grpc.ListPoliciesRequest.prototype.setIrisList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.ahghee.grpc.ListPoliciesRequest.prototype.addIris = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.ahghee.grpc.ListPoliciesRequest.prototype.clearIrisList = function() {
  this.setIrisList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ahghee.grpc.ListPoliciesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ahghee.grpc.ListPoliciesResponse.repeatedFields_, null);
};
goog.inherits(proto.ahghee.grpc.ListPoliciesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ahghee.grpc.ListPoliciesResponse.displayName = 'proto.ahghee.grpc.ListPoliciesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ahghee.grpc.ListPoliciesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ahghee.grpc.ListPoliciesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ahghee.grpc.ListPoliciesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ahghee.grpc.ListPoliciesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListPoliciesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.ahghee.grpc.Node.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ahghee.grpc.ListPoliciesResponse}
 */
proto.ahghee.grpc.ListPoliciesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ahghee.grpc.ListPoliciesResponse;
  return proto.ahghee.grpc.ListPoliciesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ahghee.grpc.ListPoliciesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ahghee.grpc.ListPoliciesResponse}
 */
proto.ahghee.grpc.ListPoliciesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ahghee.grpc.Node;
      reader.readMessage(value,proto.ahghee.grpc.Node.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ahghee.grpc.ListPoliciesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ahghee.grpc.ListPoliciesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ahghee.grpc.ListPoliciesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ahghee.grpc.ListPoliciesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ahghee.grpc.Node.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Node nodes = 1;
 * @return {!Array<!proto.ahghee.grpc.Node>}
 */
proto.ahghee.grpc.ListPoliciesResponse.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.ahghee.grpc.Node>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ahghee.grpc.Node, 1));
};


/** @param {!Array<!proto.ahghee.grpc.Node>} value */
proto.ahghee.grpc.ListPoliciesResponse.prototype.setNodesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ahghee.grpc.Node=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ahghee.grpc.Node}
 */
proto.ahghee.grpc.ListPoliciesResponse.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ahghee.grpc.Node, opt_index);
};


proto.ahghee.grpc.ListPoliciesResponse.prototype.clearNodesList = function() {
  this.setNodesList([]);
};


goog.object.extend(exports, proto.ahghee.grpc);
