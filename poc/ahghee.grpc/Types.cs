// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ahghee.Grpc {

  /// <summary>Holder for reflection information generated from types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt0eXBlcy5wcm90bxILYWhnaGVlLmdycGMiVwoNTWVtb3J5UG9pbnRlchIU",
            "CgxwYXJ0aXRpb25rZXkYASABKAcSEAoIZmlsZW5hbWUYAiABKAcSDgoGb2Zm",
            "c2V0GAMgASgGEg4KBmxlbmd0aBgEIAEoBiIrCglUeXBlQnl0ZXMSDwoHdHlw",
            "ZWlyaRgBIAEoCRINCgVieXRlcxgCIAEoDCJSCgZOb2RlSUQSDgoGcmVtb3Rl",
            "GAEgASgJEgsKA2lyaRgCIAEoCRIrCgdwb2ludGVyGAMgASgLMhouYWhnaGVl",
            "LmdycGMuTWVtb3J5UG9pbnRlciKQAgoJRGF0YUJsb2NrEiUKBm5vZGVpZBgB",
            "IAEoCzITLmFoZ2hlZS5ncnBjLk5vZGVJREgAEisKCW1ldGFieXRlcxgCIAEo",
            "CzIWLmFoZ2hlZS5ncnBjLlR5cGVCeXRlc0gAEg0KA3N0chgDIAEoCUgAEg0K",
            "A2kzMhgEIAEoBUgAEg0KA2k2NBgFIAEoA0gAEg4KBHVpMzIYBiABKA1IABIO",
            "CgR1aTY0GAcgASgESAASCwoBZBgIIAEoAUgAEgsKAWYYCSABKAJIABILCgFi",
            "GAogASgISAASMwoNbWVtb3J5cG9pbnRlchgLIAEoCzIaLmFoZ2hlZS5ncnBj",
            "Lk1lbW9yeVBvaW50ZXJIAEIGCgRkYXRhImgKA1RNRBIRCglUaW1lc3RhbXAY",
            "ASABKAMSKAoITWV0YURhdGEYAiABKAsyFi5haGdoZWUuZ3JwYy5EYXRhQmxv",
            "Y2sSJAoERGF0YRgDIAEoCzIWLmFoZ2hlZS5ncnBjLkRhdGFCbG9jayJKCghL",
            "ZXlWYWx1ZRIdCgNrZXkYASABKAsyEC5haGdoZWUuZ3JwYy5UTUQSHwoFdmFs",
            "dWUYAiABKAsyEC5haGdoZWUuZ3JwYy5UTUQigQEKBE5vZGUSHwoCaWQYASAB",
            "KAsyEy5haGdoZWUuZ3JwYy5Ob2RlSUQSLQoJZnJhZ21lbnRzGAMgAygLMhou",
            "YWhnaGVlLmdycGMuTWVtb3J5UG9pbnRlchIpCgphdHRyaWJ1dGVzGAQgAygL",
            "MhUuYWhnaGVlLmdycGMuS2V5VmFsdWUiOAoIUG9pbnRlcnMSLAoIcG9pbnRl",
            "cnMYASADKAsyGi5haGdoZWUuZ3JwYy5NZW1vcnlQb2ludGVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.MemoryPointer), global::Ahghee.Grpc.MemoryPointer.Parser, new[]{ "Partitionkey", "Filename", "Offset", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.TypeBytes), global::Ahghee.Grpc.TypeBytes.Parser, new[]{ "Typeiri", "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.NodeID), global::Ahghee.Grpc.NodeID.Parser, new[]{ "Remote", "Iri", "Pointer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.DataBlock), global::Ahghee.Grpc.DataBlock.Parser, new[]{ "Nodeid", "Metabytes", "Str", "I32", "I64", "Ui32", "Ui64", "D", "F", "B", "Memorypointer" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.TMD), global::Ahghee.Grpc.TMD.Parser, new[]{ "Timestamp", "MetaData", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.KeyValue), global::Ahghee.Grpc.KeyValue.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Node), global::Ahghee.Grpc.Node.Parser, new[]{ "Id", "Fragments", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Pointers), global::Ahghee.Grpc.Pointers.Parser, new[]{ "Pointers_" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// MemoryPointer needs fixed fields, so we can update them
  /// later without affecting the position of other messages
  /// </summary>
  public sealed partial class MemoryPointer : pb::IMessage<MemoryPointer> {
    private static readonly pb::MessageParser<MemoryPointer> _parser = new pb::MessageParser<MemoryPointer>(() => new MemoryPointer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemoryPointer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemoryPointer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemoryPointer(MemoryPointer other) : this() {
      partitionkey_ = other.partitionkey_;
      filename_ = other.filename_;
      offset_ = other.offset_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemoryPointer Clone() {
      return new MemoryPointer(this);
    }

    /// <summary>Field number for the "partitionkey" field.</summary>
    public const int PartitionkeyFieldNumber = 1;
    private uint partitionkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Partitionkey {
      get { return partitionkey_; }
      set {
        partitionkey_ = value;
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private uint filename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Filename {
      get { return filename_; }
      set {
        filename_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private ulong offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 4;
    private ulong length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemoryPointer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemoryPointer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Partitionkey != other.Partitionkey) return false;
      if (Filename != other.Filename) return false;
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Partitionkey != 0) hash ^= Partitionkey.GetHashCode();
      if (Filename != 0) hash ^= Filename.GetHashCode();
      if (Offset != 0UL) hash ^= Offset.GetHashCode();
      if (Length != 0UL) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemoryPointer other) {
      if (other == null) {
        return;
      }
      if (other.Partitionkey != 0) {
        Partitionkey = other.Partitionkey;
      }
      if (other.Filename != 0) {
        Filename = other.Filename;
      }
      if (other.Offset != 0UL) {
        Offset = other.Offset;
      }
      if (other.Length != 0UL) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Partitionkey = input.ReadFixed32();
            break;
          }
          case 21: {
            Filename = input.ReadFixed32();
            break;
          }
          case 25: {
            Offset = input.ReadFixed64();
            break;
          }
          case 33: {
            Length = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TypeBytes : pb::IMessage<TypeBytes> {
    private static readonly pb::MessageParser<TypeBytes> _parser = new pb::MessageParser<TypeBytes>(() => new TypeBytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeBytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeBytes(TypeBytes other) : this() {
      typeiri_ = other.typeiri_;
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeBytes Clone() {
      return new TypeBytes(this);
    }

    /// <summary>Field number for the "typeiri" field.</summary>
    public const int TypeiriFieldNumber = 1;
    private string typeiri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Typeiri {
      get { return typeiri_; }
      set {
        typeiri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeBytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Typeiri != other.Typeiri) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Typeiri.Length != 0) hash ^= Typeiri.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Typeiri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Typeiri);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Typeiri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Typeiri);
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeBytes other) {
      if (other == null) {
        return;
      }
      if (other.Typeiri.Length != 0) {
        Typeiri = other.Typeiri;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Typeiri = input.ReadString();
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeID : pb::IMessage<NodeID> {
    private static readonly pb::MessageParser<NodeID> _parser = new pb::MessageParser<NodeID>(() => new NodeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeID(NodeID other) : this() {
      remote_ = other.remote_;
      iri_ = other.iri_;
      pointer_ = other.pointer_ != null ? other.pointer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeID Clone() {
      return new NodeID(this);
    }

    /// <summary>Field number for the "remote" field.</summary>
    public const int RemoteFieldNumber = 1;
    private string remote_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remote {
      get { return remote_; }
      set {
        remote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iri" field.</summary>
    public const int IriFieldNumber = 2;
    private string iri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iri {
      get { return iri_; }
      set {
        iri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pointer" field.</summary>
    public const int PointerFieldNumber = 3;
    private global::Ahghee.Grpc.MemoryPointer pointer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.MemoryPointer Pointer {
      get { return pointer_; }
      set {
        pointer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Remote.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Remote);
      }
      if (Iri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Iri);
      }
      if (pointer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pointer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Remote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remote);
      }
      if (Iri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Iri);
      }
      if (pointer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pointer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeID other) {
      if (other == null) {
        return;
      }
      if (other.Remote.Length != 0) {
        Remote = other.Remote;
      }
      if (other.Iri.Length != 0) {
        Iri = other.Iri;
      }
      if (other.pointer_ != null) {
        if (pointer_ == null) {
          Pointer = new global::Ahghee.Grpc.MemoryPointer();
        }
        Pointer.MergeFrom(other.Pointer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Remote = input.ReadString();
            break;
          }
          case 18: {
            Iri = input.ReadString();
            break;
          }
          case 26: {
            if (pointer_ == null) {
              Pointer = new global::Ahghee.Grpc.MemoryPointer();
            }
            input.ReadMessage(Pointer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataBlock : pb::IMessage<DataBlock> {
    private static readonly pb::MessageParser<DataBlock> _parser = new pb::MessageParser<DataBlock>(() => new DataBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBlock(DataBlock other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.Nodeid:
          Nodeid = other.Nodeid.Clone();
          break;
        case DataOneofCase.Metabytes:
          Metabytes = other.Metabytes.Clone();
          break;
        case DataOneofCase.Str:
          Str = other.Str;
          break;
        case DataOneofCase.I32:
          I32 = other.I32;
          break;
        case DataOneofCase.I64:
          I64 = other.I64;
          break;
        case DataOneofCase.Ui32:
          Ui32 = other.Ui32;
          break;
        case DataOneofCase.Ui64:
          Ui64 = other.Ui64;
          break;
        case DataOneofCase.D:
          D = other.D;
          break;
        case DataOneofCase.F:
          F = other.F;
          break;
        case DataOneofCase.B:
          B = other.B;
          break;
        case DataOneofCase.Memorypointer:
          Memorypointer = other.Memorypointer.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBlock Clone() {
      return new DataBlock(this);
    }

    /// <summary>Field number for the "nodeid" field.</summary>
    public const int NodeidFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.NodeID Nodeid {
      get { return dataCase_ == DataOneofCase.Nodeid ? (global::Ahghee.Grpc.NodeID) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Nodeid;
      }
    }

    /// <summary>Field number for the "metabytes" field.</summary>
    public const int MetabytesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.TypeBytes Metabytes {
      get { return dataCase_ == DataOneofCase.Metabytes ? (global::Ahghee.Grpc.TypeBytes) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Metabytes;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return dataCase_ == DataOneofCase.Str ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Str;
      }
    }

    /// <summary>Field number for the "i32" field.</summary>
    public const int I32FieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I32 {
      get { return dataCase_ == DataOneofCase.I32 ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.I32;
      }
    }

    /// <summary>Field number for the "i64" field.</summary>
    public const int I64FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long I64 {
      get { return dataCase_ == DataOneofCase.I64 ? (long) data_ : 0L; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.I64;
      }
    }

    /// <summary>Field number for the "ui32" field.</summary>
    public const int Ui32FieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ui32 {
      get { return dataCase_ == DataOneofCase.Ui32 ? (uint) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.Ui32;
      }
    }

    /// <summary>Field number for the "ui64" field.</summary>
    public const int Ui64FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Ui64 {
      get { return dataCase_ == DataOneofCase.Ui64 ? (ulong) data_ : 0UL; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.Ui64;
      }
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double D {
      get { return dataCase_ == DataOneofCase.D ? (double) data_ : 0D; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.D;
      }
    }

    /// <summary>Field number for the "f" field.</summary>
    public const int FFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float F {
      get { return dataCase_ == DataOneofCase.F ? (float) data_ : 0F; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.F;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool B {
      get { return dataCase_ == DataOneofCase.B ? (bool) data_ : false; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.B;
      }
    }

    /// <summary>Field number for the "memorypointer" field.</summary>
    public const int MemorypointerFieldNumber = 11;
    /// <summary>
    ///todo: add support for protobuf any
    ///google.protobuf.Any any = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.MemoryPointer Memorypointer {
      get { return dataCase_ == DataOneofCase.Memorypointer ? (global::Ahghee.Grpc.MemoryPointer) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Memorypointer;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Nodeid = 1,
      Metabytes = 2,
      Str = 3,
      I32 = 4,
      I64 = 5,
      Ui32 = 6,
      Ui64 = 7,
      D = 8,
      F = 9,
      B = 10,
      Memorypointer = 11,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nodeid, other.Nodeid)) return false;
      if (!object.Equals(Metabytes, other.Metabytes)) return false;
      if (Str != other.Str) return false;
      if (I32 != other.I32) return false;
      if (I64 != other.I64) return false;
      if (Ui32 != other.Ui32) return false;
      if (Ui64 != other.Ui64) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(D, other.D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(F, other.F)) return false;
      if (B != other.B) return false;
      if (!object.Equals(Memorypointer, other.Memorypointer)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.Nodeid) hash ^= Nodeid.GetHashCode();
      if (dataCase_ == DataOneofCase.Metabytes) hash ^= Metabytes.GetHashCode();
      if (dataCase_ == DataOneofCase.Str) hash ^= Str.GetHashCode();
      if (dataCase_ == DataOneofCase.I32) hash ^= I32.GetHashCode();
      if (dataCase_ == DataOneofCase.I64) hash ^= I64.GetHashCode();
      if (dataCase_ == DataOneofCase.Ui32) hash ^= Ui32.GetHashCode();
      if (dataCase_ == DataOneofCase.Ui64) hash ^= Ui64.GetHashCode();
      if (dataCase_ == DataOneofCase.D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(D);
      if (dataCase_ == DataOneofCase.F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(F);
      if (dataCase_ == DataOneofCase.B) hash ^= B.GetHashCode();
      if (dataCase_ == DataOneofCase.Memorypointer) hash ^= Memorypointer.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.Nodeid) {
        output.WriteRawTag(10);
        output.WriteMessage(Nodeid);
      }
      if (dataCase_ == DataOneofCase.Metabytes) {
        output.WriteRawTag(18);
        output.WriteMessage(Metabytes);
      }
      if (dataCase_ == DataOneofCase.Str) {
        output.WriteRawTag(26);
        output.WriteString(Str);
      }
      if (dataCase_ == DataOneofCase.I32) {
        output.WriteRawTag(32);
        output.WriteInt32(I32);
      }
      if (dataCase_ == DataOneofCase.I64) {
        output.WriteRawTag(40);
        output.WriteInt64(I64);
      }
      if (dataCase_ == DataOneofCase.Ui32) {
        output.WriteRawTag(48);
        output.WriteUInt32(Ui32);
      }
      if (dataCase_ == DataOneofCase.Ui64) {
        output.WriteRawTag(56);
        output.WriteUInt64(Ui64);
      }
      if (dataCase_ == DataOneofCase.D) {
        output.WriteRawTag(65);
        output.WriteDouble(D);
      }
      if (dataCase_ == DataOneofCase.F) {
        output.WriteRawTag(77);
        output.WriteFloat(F);
      }
      if (dataCase_ == DataOneofCase.B) {
        output.WriteRawTag(80);
        output.WriteBool(B);
      }
      if (dataCase_ == DataOneofCase.Memorypointer) {
        output.WriteRawTag(90);
        output.WriteMessage(Memorypointer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.Nodeid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nodeid);
      }
      if (dataCase_ == DataOneofCase.Metabytes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metabytes);
      }
      if (dataCase_ == DataOneofCase.Str) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (dataCase_ == DataOneofCase.I32) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I32);
      }
      if (dataCase_ == DataOneofCase.I64) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(I64);
      }
      if (dataCase_ == DataOneofCase.Ui32) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ui32);
      }
      if (dataCase_ == DataOneofCase.Ui64) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ui64);
      }
      if (dataCase_ == DataOneofCase.D) {
        size += 1 + 8;
      }
      if (dataCase_ == DataOneofCase.F) {
        size += 1 + 4;
      }
      if (dataCase_ == DataOneofCase.B) {
        size += 1 + 1;
      }
      if (dataCase_ == DataOneofCase.Memorypointer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memorypointer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataBlock other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.Nodeid:
          if (Nodeid == null) {
            Nodeid = new global::Ahghee.Grpc.NodeID();
          }
          Nodeid.MergeFrom(other.Nodeid);
          break;
        case DataOneofCase.Metabytes:
          if (Metabytes == null) {
            Metabytes = new global::Ahghee.Grpc.TypeBytes();
          }
          Metabytes.MergeFrom(other.Metabytes);
          break;
        case DataOneofCase.Str:
          Str = other.Str;
          break;
        case DataOneofCase.I32:
          I32 = other.I32;
          break;
        case DataOneofCase.I64:
          I64 = other.I64;
          break;
        case DataOneofCase.Ui32:
          Ui32 = other.Ui32;
          break;
        case DataOneofCase.Ui64:
          Ui64 = other.Ui64;
          break;
        case DataOneofCase.D:
          D = other.D;
          break;
        case DataOneofCase.F:
          F = other.F;
          break;
        case DataOneofCase.B:
          B = other.B;
          break;
        case DataOneofCase.Memorypointer:
          if (Memorypointer == null) {
            Memorypointer = new global::Ahghee.Grpc.MemoryPointer();
          }
          Memorypointer.MergeFrom(other.Memorypointer);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ahghee.Grpc.NodeID subBuilder = new global::Ahghee.Grpc.NodeID();
            if (dataCase_ == DataOneofCase.Nodeid) {
              subBuilder.MergeFrom(Nodeid);
            }
            input.ReadMessage(subBuilder);
            Nodeid = subBuilder;
            break;
          }
          case 18: {
            global::Ahghee.Grpc.TypeBytes subBuilder = new global::Ahghee.Grpc.TypeBytes();
            if (dataCase_ == DataOneofCase.Metabytes) {
              subBuilder.MergeFrom(Metabytes);
            }
            input.ReadMessage(subBuilder);
            Metabytes = subBuilder;
            break;
          }
          case 26: {
            Str = input.ReadString();
            break;
          }
          case 32: {
            I32 = input.ReadInt32();
            break;
          }
          case 40: {
            I64 = input.ReadInt64();
            break;
          }
          case 48: {
            Ui32 = input.ReadUInt32();
            break;
          }
          case 56: {
            Ui64 = input.ReadUInt64();
            break;
          }
          case 65: {
            D = input.ReadDouble();
            break;
          }
          case 77: {
            F = input.ReadFloat();
            break;
          }
          case 80: {
            B = input.ReadBool();
            break;
          }
          case 90: {
            global::Ahghee.Grpc.MemoryPointer subBuilder = new global::Ahghee.Grpc.MemoryPointer();
            if (dataCase_ == DataOneofCase.Memorypointer) {
              subBuilder.MergeFrom(Memorypointer);
            }
            input.ReadMessage(subBuilder);
            Memorypointer = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class TMD : pb::IMessage<TMD> {
    private static readonly pb::MessageParser<TMD> _parser = new pb::MessageParser<TMD>(() => new TMD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TMD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TMD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TMD(TMD other) : this() {
      timestamp_ = other.timestamp_;
      metaData_ = other.metaData_ != null ? other.metaData_.Clone() : null;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TMD Clone() {
      return new TMD(this);
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "MetaData" field.</summary>
    public const int MetaDataFieldNumber = 2;
    private global::Ahghee.Grpc.DataBlock metaData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.DataBlock MetaData {
      get { return metaData_; }
      set {
        metaData_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::Ahghee.Grpc.DataBlock data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.DataBlock Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TMD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TMD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(MetaData, other.MetaData)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (metaData_ != null) hash ^= MetaData.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (metaData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaData);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (metaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaData);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TMD other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.metaData_ != null) {
        if (metaData_ == null) {
          MetaData = new global::Ahghee.Grpc.DataBlock();
        }
        MetaData.MergeFrom(other.MetaData);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Ahghee.Grpc.DataBlock();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            if (metaData_ == null) {
              MetaData = new global::Ahghee.Grpc.DataBlock();
            }
            input.ReadMessage(MetaData);
            break;
          }
          case 26: {
            if (data_ == null) {
              Data = new global::Ahghee.Grpc.DataBlock();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValue : pb::IMessage<KeyValue> {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Ahghee.Grpc.TMD key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.TMD Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Ahghee.Grpc.TMD value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.TMD Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Ahghee.Grpc.TMD();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Ahghee.Grpc.TMD();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Ahghee.Grpc.TMD();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Ahghee.Grpc.TMD();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      fragments_ = other.fragments_.Clone();
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Ahghee.Grpc.NodeID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.NodeID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "fragments" field.</summary>
    public const int FragmentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.MemoryPointer> _repeated_fragments_codec
        = pb::FieldCodec.ForMessage(26, global::Ahghee.Grpc.MemoryPointer.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> fragments_ = new pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> Fragments {
      get { return fragments_; }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.KeyValue> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(34, global::Ahghee.Grpc.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.KeyValue> attributes_ = new pbc::RepeatedField<global::Ahghee.Grpc.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.KeyValue> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if(!fragments_.Equals(other.fragments_)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      hash ^= fragments_.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      fragments_.WriteTo(output, _repeated_fragments_codec);
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      size += fragments_.CalculateSize(_repeated_fragments_codec);
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Ahghee.Grpc.NodeID();
        }
        Id.MergeFrom(other.Id);
      }
      fragments_.Add(other.fragments_);
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Ahghee.Grpc.NodeID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            fragments_.AddEntriesFrom(input, _repeated_fragments_codec);
            break;
          }
          case 34: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Pointers : pb::IMessage<Pointers> {
    private static readonly pb::MessageParser<Pointers> _parser = new pb::MessageParser<Pointers>(() => new Pointers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pointers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pointers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pointers(Pointers other) : this() {
      pointers_ = other.pointers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pointers Clone() {
      return new Pointers(this);
    }

    /// <summary>Field number for the "pointers" field.</summary>
    public const int Pointers_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.MemoryPointer> _repeated_pointers_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.MemoryPointer.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> pointers_ = new pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> Pointers_ {
      get { return pointers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pointers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pointers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pointers_.Equals(other.pointers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pointers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pointers_.WriteTo(output, _repeated_pointers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pointers_.CalculateSize(_repeated_pointers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pointers other) {
      if (other == null) {
        return;
      }
      pointers_.Add(other.pointers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pointers_.AddEntriesFrom(input, _repeated_pointers_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
