// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ahghee.Grpc {

  /// <summary>Holder for reflection information generated from types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt0eXBlcy5wcm90bxILYWhnaGVlLmdycGMaH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8iVwoNTWVtb3J5UG9pbnRlchIUCgxwYXJ0aXRpb25r",
            "ZXkYASABKAcSEAoIZmlsZW5hbWUYAiABKAcSDgoGb2Zmc2V0GAMgASgGEg4K",
            "Bmxlbmd0aBgEIAEoBiIrCglUeXBlQnl0ZXMSDwoHdHlwZWlyaRgBIAEoCRIN",
            "CgVieXRlcxgCIAEoDCJSCgZOb2RlSUQSDgoGcmVtb3RlGAEgASgJEgsKA2ly",
            "aRgCIAEoCRIrCgdwb2ludGVyGAMgASgLMhouYWhnaGVlLmdycGMuTWVtb3J5",
            "UG9pbnRlciLWAgoJRGF0YUJsb2NrEiUKBm5vZGVpZBgBIAEoCzITLmFoZ2hl",
            "ZS5ncnBjLk5vZGVJREgAEisKCW1ldGFieXRlcxgCIAEoCzIWLmFoZ2hlZS5n",
            "cnBjLlR5cGVCeXRlc0gAEg0KA3N0chgDIAEoCUgAEg0KA2kzMhgEIAEoBUgA",
            "Eg0KA2k2NBgFIAEoA0gAEg4KBHVpMzIYBiABKA1IABIOCgR1aTY0GAcgASgE",
            "SAASCwoBZBgIIAEoAUgAEgsKAWYYCSABKAJIABILCgFiGAogASgISAASMwoN",
            "bWVtb3J5cG9pbnRlchgLIAEoCzIaLmFoZ2hlZS5ncnBjLk1lbW9yeVBvaW50",
            "ZXJIABIjCgVhcnJheRgMIAEoCzISLmFoZ2hlZS5ncnBjLkFycmF5SAASHwoD",
            "bWFwGA0gASgLMhAuYWhnaGVlLmdycGMuTWFwSABCBgoEZGF0YSItCgVBcnJh",
            "eRIkCgRpdGVtGAEgAygLMhYuYWhnaGVlLmdycGMuRGF0YUJsb2NrIjAKA01h",
            "cBIpCgphdHRyaWJ1dGVzGAEgAygLMhUuYWhnaGVlLmdycGMuS2V5VmFsdWUi",
            "aAoDVE1EEhEKCVRpbWVzdGFtcBgBIAEoAxIoCghNZXRhRGF0YRgCIAEoCzIW",
            "LmFoZ2hlZS5ncnBjLkRhdGFCbG9jaxIkCgREYXRhGAMgASgLMhYuYWhnaGVl",
            "LmdycGMuRGF0YUJsb2NrIkoKCEtleVZhbHVlEh0KA2tleRgBIAEoCzIQLmFo",
            "Z2hlZS5ncnBjLlRNRBIfCgV2YWx1ZRgCIAEoCzIQLmFoZ2hlZS5ncnBjLlRN",
            "RCKBAQoETm9kZRIfCgJpZBgBIAEoCzITLmFoZ2hlZS5ncnBjLk5vZGVJRBIt",
            "CglmcmFnbWVudHMYAyADKAsyGi5haGdoZWUuZ3JwYy5NZW1vcnlQb2ludGVy",
            "EikKCmF0dHJpYnV0ZXMYBCADKAsyFS5haGdoZWUuZ3JwYy5LZXlWYWx1ZSI4",
            "CghQb2ludGVycxIsCghwb2ludGVycxgBIAMoCzIaLmFoZ2hlZS5ncnBjLk1l",
            "bW9yeVBvaW50ZXIiIQoFUmFuZ2USDAoEZnJvbRgBIAEoBRIKCgJ0bxgCIAEo",
            "BSKgBAoORm9sbG93T3BlcmF0b3ISOgoJZm9sbG93QW55GAEgASgLMiUuYWhn",
            "aGVlLmdycGMuRm9sbG93T3BlcmF0b3IuRm9sbG93QW55SAASOQoKZm9sbG93",
            "RWRnZRgCIAEoCzIjLmFoZ2hlZS5ncnBjLkZvbGxvd09wZXJhdG9yLkVkZ2VO",
            "dW1IABouCglGb2xsb3dBbnkSIQoFcmFuZ2UYASABKAsyEi5haGdoZWUuZ3Jw",
            "Yy5SYW5nZRpUCglFZGdlUmFuZ2USJAoEZWRnZRgBIAEoCzIWLmFoZ2hlZS5n",
            "cnBjLkRhdGFCbG9jaxIhCgVyYW5nZRgCIAEoCzISLmFoZ2hlZS5ncnBjLlJh",
            "bmdlGoABCgdFZGdlQ01QEjEKBGxlZnQYASABKAsyIy5haGdoZWUuZ3JwYy5G",
            "b2xsb3dPcGVyYXRvci5FZGdlTnVtEg4KBkJPT0xPUBgCIAEoCRIyCgVyaWdo",
            "dBgDIAEoCzIjLmFoZ2hlZS5ncnBjLkZvbGxvd09wZXJhdG9yLkVkZ2VOdW0a",
            "gwEKB0VkZ2VOdW0SOgoJZWRnZVJhbmdlGAEgASgLMiUuYWhnaGVlLmdycGMu",
            "Rm9sbG93T3BlcmF0b3IuRWRnZVJhbmdlSAASNgoHZWRnZUNtcBgCIAEoCzIj",
            "LmFoZ2hlZS5ncnBjLkZvbGxvd09wZXJhdG9yLkVkZ2VDTVBIAEIECgJvcEII",
            "CgZGb2xsb3ci5AMKDkZpbHRlck9wZXJhdG9yEjQKB2NvbXBhcmUYASABKAsy",
            "Iy5haGdoZWUuZ3JwYy5GaWx0ZXJPcGVyYXRvci5Db21wYXJlGpwBCgdDb21w",
            "YXJlEkIKC2tldlZhbHVlQ21wGAEgASgLMisuYWhnaGVlLmdycGMuRmlsdGVy",
            "T3BlcmF0b3IuQ29tcGFyZUtleVZhbHVlSAASQgoLY29tcG91bmRDbXAYAiAB",
            "KAsyKy5haGdoZWUuZ3JwYy5GaWx0ZXJPcGVyYXRvci5Db21wYXJlQ29tcG91",
            "bmRIAEIJCgdjbXBUeXBlGnIKD0NvbXBhcmVLZXlWYWx1ZRIoCghQcm9wZXJ0",
            "eRgBIAEoCzIWLmFoZ2hlZS5ncnBjLkRhdGFCbG9jaxIOCgZNQVRIT1AYAiAB",
            "KAkSJQoFVmFsdWUYAyABKAsyFi5haGdoZWUuZ3JwYy5EYXRhQmxvY2saiAEK",
            "D0NvbXBhcmVDb21wb3VuZBIxCgRsZWZ0GAEgASgLMiMuYWhnaGVlLmdycGMu",
            "RmlsdGVyT3BlcmF0b3IuQ29tcGFyZRIOCgZCT09MT1AYAiABKAkSMgoFcmln",
            "aHQYAyABKAsyIy5haGdoZWUuZ3JwYy5GaWx0ZXJPcGVyYXRvci5Db21wYXJl",
            "IhwKC0xpbWl0RmlsdGVyEg0KBXZhbHVlGAEgASgFIhsKClNraXBGaWx0ZXIS",
            "DQoFdmFsdWUYASABKAUilQcKDkZpZWxkc09wZXJhdG9yEjAKBWNsdWRlGAEg",
            "ASgLMiEuYWhnaGVlLmdycGMuRmllbGRzT3BlcmF0b3IuQ2x1ZGUasAEKCFR3",
            "b0NsdWRlEi8KBGxlZnQYASABKAsyIS5haGdoZWUuZ3JwYy5GaWVsZHNPcGVy",
            "YXRvci5DbHVkZRI0CgdpbmNsdWRlGAIgASgLMiEuYWhnaGVlLmdycGMuRmll",
            "bGRzT3BlcmF0b3IuQ2x1ZGVIABI0CgdleGNsdWRlGAMgASgLMiEuYWhnaGVl",
            "LmdycGMuRmllbGRzT3BlcmF0b3IuQ2x1ZGVIAEIHCgVyaWdodBo+CglDbHVk",
            "ZUxpc3QSMQoGY2x1ZGVzGAEgAygLMiEuYWhnaGVlLmdycGMuRmllbGRzT3Bl",
            "cmF0b3IuQ2x1ZGUatwIKB0NsdWRlT3ASOwoEbGVmdBgBIAEoCzItLmFoZ2hl",
            "ZS5ncnBjLkZpZWxkc09wZXJhdG9yLkNsdWRlT3AuQ2x1ZGVQYXJ0EjwKBXJp",
            "Z2h0GAIgASgLMi0uYWhnaGVlLmdycGMuRmllbGRzT3BlcmF0b3IuQ2x1ZGVP",
            "cC5DbHVkZVBhcnQasAEKCUNsdWRlUGFydBIbChFjYXJyb3RTdHJpbmdNYXRj",
            "aBgBIAEoCUgAEhUKC3N0cmluZ01hdGNoGAMgASgJSAASEQoHaXNDYXJldBgC",
            "IAEoCEgAEhAKBmlzU3RhchgEIAEoCEgAEhYKDGlzVHlwZVN0cmluZxgFIAEo",
            "CEgAEhMKCWlzVHlwZUludBgGIAEoCEgAEhUKC2lzVHlwZUZsb2F0GAcgASgI",
            "SABCBgoEcGFydBqjAgoFQ2x1ZGUSNQoEbGlzdBgBIAEoCzIlLmFoZ2hlZS5n",
            "cnBjLkZpZWxkc09wZXJhdG9yLkNsdWRlTGlzdEgAEjQKB2luY2x1ZGUYAiAB",
            "KAsyIS5haGdoZWUuZ3JwYy5GaWVsZHNPcGVyYXRvci5DbHVkZUgAEjQKB2V4",
            "Y2x1ZGUYAyABKAsyIS5haGdoZWUuZ3JwYy5GaWVsZHNPcGVyYXRvci5DbHVk",
            "ZUgAEjgKCHR3b2NsdWRlGAQgASgLMiQuYWhnaGVlLmdycGMuRmllbGRzT3Bl",
            "cmF0b3IuVHdvQ2x1ZGVIABIxCgJvcBgFIAEoCzIjLmFoZ2hlZS5ncnBjLkZp",
            "ZWxkc09wZXJhdG9yLkNsdWRlT3BIAEIKCghPcGVyYXRvciKUAgoEU3RlcBIt",
            "CgZmb2xsb3cYASABKAsyGy5haGdoZWUuZ3JwYy5Gb2xsb3dPcGVyYXRvckgA",
            "Ei0KBmZpbHRlchgCIAEoCzIbLmFoZ2hlZS5ncnBjLkZpbHRlck9wZXJhdG9y",
            "SAASKQoFbGltaXQYBCABKAsyGC5haGdoZWUuZ3JwYy5MaW1pdEZpbHRlckgA",
            "EicKBHNraXAYBSABKAsyFy5haGdoZWUuZ3JwYy5Ta2lwRmlsdGVySAASLQoG",
            "ZmllbGRzGAYgASgLMhsuYWhnaGVlLmdycGMuRmllbGRzT3BlcmF0b3JIABIf",
            "CgRuZXh0GAMgASgLMhEuYWhnaGVlLmdycGMuU3RlcEIKCghvcGVyYXRvciI2",
            "CgVRdWVyeRIfCgRzdGVwGAEgASgLMhEuYWhnaGVlLmdycGMuU3RlcBIMCgRp",
            "cmlzGAIgAygJIh4KC1B1dFJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgingEK",
            "EkdldE1ldHJpY3NSZXNwb25zZRI3CgdtZXRyaWNzGAEgAygLMiYuYWhnaGVl",
            "LmdycGMuR2V0TWV0cmljc1Jlc3BvbnNlLk1ldHJpYxpPCgZNZXRyaWMSDQoF",
            "dmFsdWUYASABKAISDAoEbmFtZRgCIAEoCRIoCgR0aW1lGAMgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcCIiChFHZXRNZXRyaWNzUmVxdWVzdBIN",
            "CgVuYW1lcxgBIAMoCSJ3Cg9HZXRTdGF0c1JlcXVlc3QSMAoFc3RhdHMYASAD",
            "KAsyIS5haGdoZWUuZ3JwYy5HZXRTdGF0c1JlcXVlc3QuU3RhdBoyCgRTdGF0",
            "Eg0KBXZhbHVlGAEgASgCEg0KBXRvcGljGAIgASgJEgwKBHN0YXQYAyABKAki",
            "IQoQR2V0U3RhdHNSZXNwb25zZRINCgVuYW1lcxgBIAMoCSIhChBMaXN0U3Rh",
            "dHNSZXF1ZXN0Eg0KBW1hdGNoGAEgAygJIiIKEUxpc3RTdGF0c1Jlc3BvbnNl",
            "Eg0KBW5hbWVzGAEgAygJIiMKE0xpc3RQb2xpY2llc1JlcXVlc3QSDAoEaXJp",
            "cxgBIAMoCSI4ChRMaXN0UG9saWNpZXNSZXNwb25zZRIgCgVub2RlcxgBIAMo",
            "CzIRLmFoZ2hlZS5ncnBjLk5vZGUiJgoITG9hZEZpbGUSDAoEdHlwZRgBIAEo",
            "CRIMCgRwYXRoGAIgASgJIjQKEExvYWRGaWxlUmVzcG9uc2USEAoIcHJvZ3Jl",
            "c3MYASABKAMSDgoGbGVuZ3RoGAIgASgDMusDCgxXYXREYlNlcnZpY2USQAoE",
            "TG9hZBIVLmFoZ2hlZS5ncnBjLkxvYWRGaWxlGh0uYWhnaGVlLmdycGMuTG9h",
            "ZEZpbGVSZXNwb25zZSIAMAESNAoDUHV0EhEuYWhnaGVlLmdycGMuTm9kZRoY",
            "LmFoZ2hlZS5ncnBjLlB1dFJlc3BvbnNlIgASMAoDR2V0EhIuYWhnaGVlLmdy",
            "cGMuUXVlcnkaES5haGdoZWUuZ3JwYy5Ob2RlIgAwARJPCgpHZXRNZXRyaWNz",
            "Eh4uYWhnaGVlLmdycGMuR2V0TWV0cmljc1JlcXVlc3QaHy5haGdoZWUuZ3Jw",
            "Yy5HZXRNZXRyaWNzUmVzcG9uc2UiABJJCghHZXRTdGF0cxIcLmFoZ2hlZS5n",
            "cnBjLkdldFN0YXRzUmVxdWVzdBodLmFoZ2hlZS5ncnBjLkdldFN0YXRzUmVz",
            "cG9uc2UiABJMCglMaXN0U3RhdHMSHS5haGdoZWUuZ3JwYy5MaXN0U3RhdHNS",
            "ZXF1ZXN0Gh4uYWhnaGVlLmdycGMuTGlzdFN0YXRzUmVzcG9uc2UiABJHCgxM",
            "aXN0UG9saWNpZXMSIC5haGdoZWUuZ3JwYy5MaXN0UG9saWNpZXNSZXF1ZXN0",
            "GhEuYWhnaGVlLmdycGMuTm9kZSIAMAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.MemoryPointer), global::Ahghee.Grpc.MemoryPointer.Parser, new[]{ "Partitionkey", "Filename", "Offset", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.TypeBytes), global::Ahghee.Grpc.TypeBytes.Parser, new[]{ "Typeiri", "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.NodeID), global::Ahghee.Grpc.NodeID.Parser, new[]{ "Remote", "Iri", "Pointer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.DataBlock), global::Ahghee.Grpc.DataBlock.Parser, new[]{ "Nodeid", "Metabytes", "Str", "I32", "I64", "Ui32", "Ui64", "D", "F", "B", "Memorypointer", "Array", "Map" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Array), global::Ahghee.Grpc.Array.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Map), global::Ahghee.Grpc.Map.Parser, new[]{ "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.TMD), global::Ahghee.Grpc.TMD.Parser, new[]{ "Timestamp", "MetaData", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.KeyValue), global::Ahghee.Grpc.KeyValue.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Node), global::Ahghee.Grpc.Node.Parser, new[]{ "Id", "Fragments", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Pointers), global::Ahghee.Grpc.Pointers.Parser, new[]{ "Pointers_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Range), global::Ahghee.Grpc.Range.Parser, new[]{ "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FollowOperator), global::Ahghee.Grpc.FollowOperator.Parser, new[]{ "FollowAny", "FollowEdge" }, new[]{ "Follow" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FollowOperator.Types.FollowAny), global::Ahghee.Grpc.FollowOperator.Types.FollowAny.Parser, new[]{ "Range" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FollowOperator.Types.EdgeRange), global::Ahghee.Grpc.FollowOperator.Types.EdgeRange.Parser, new[]{ "Edge", "Range" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP), global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP.Parser, new[]{ "Left", "BOOLOP", "Right" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FollowOperator.Types.EdgeNum), global::Ahghee.Grpc.FollowOperator.Types.EdgeNum.Parser, new[]{ "EdgeRange", "EdgeCmp" }, new[]{ "Op" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FilterOperator), global::Ahghee.Grpc.FilterOperator.Parser, new[]{ "Compare" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FilterOperator.Types.Compare), global::Ahghee.Grpc.FilterOperator.Types.Compare.Parser, new[]{ "KevValueCmp", "CompoundCmp" }, new[]{ "CmpType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue), global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue.Parser, new[]{ "Property", "MATHOP", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FilterOperator.Types.CompareCompound), global::Ahghee.Grpc.FilterOperator.Types.CompareCompound.Parser, new[]{ "Left", "BOOLOP", "Right" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.LimitFilter), global::Ahghee.Grpc.LimitFilter.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.SkipFilter), global::Ahghee.Grpc.SkipFilter.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FieldsOperator), global::Ahghee.Grpc.FieldsOperator.Parser, new[]{ "Clude" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FieldsOperator.Types.TwoClude), global::Ahghee.Grpc.FieldsOperator.Types.TwoClude.Parser, new[]{ "Left", "Include", "Exclude" }, new[]{ "Right" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FieldsOperator.Types.CludeList), global::Ahghee.Grpc.FieldsOperator.Types.CludeList.Parser, new[]{ "Cludes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FieldsOperator.Types.CludeOp), global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Parser, new[]{ "Left", "Right" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart), global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart.Parser, new[]{ "CarrotStringMatch", "StringMatch", "IsCaret", "IsStar", "IsTypeString", "IsTypeInt", "IsTypeFloat" }, new[]{ "Part" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.FieldsOperator.Types.Clude), global::Ahghee.Grpc.FieldsOperator.Types.Clude.Parser, new[]{ "List", "Include", "Exclude", "Twoclude", "Op" }, new[]{ "Operator" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Step), global::Ahghee.Grpc.Step.Parser, new[]{ "Follow", "Filter", "Limit", "Skip", "Fields", "Next" }, new[]{ "Operator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.Query), global::Ahghee.Grpc.Query.Parser, new[]{ "Step", "Iris" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.PutResponse), global::Ahghee.Grpc.PutResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.GetMetricsResponse), global::Ahghee.Grpc.GetMetricsResponse.Parser, new[]{ "Metrics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.GetMetricsResponse.Types.Metric), global::Ahghee.Grpc.GetMetricsResponse.Types.Metric.Parser, new[]{ "Value", "Name", "Time" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.GetMetricsRequest), global::Ahghee.Grpc.GetMetricsRequest.Parser, new[]{ "Names" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.GetStatsRequest), global::Ahghee.Grpc.GetStatsRequest.Parser, new[]{ "Stats" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.GetStatsRequest.Types.Stat), global::Ahghee.Grpc.GetStatsRequest.Types.Stat.Parser, new[]{ "Value", "Topic", "Stat_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.GetStatsResponse), global::Ahghee.Grpc.GetStatsResponse.Parser, new[]{ "Names" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.ListStatsRequest), global::Ahghee.Grpc.ListStatsRequest.Parser, new[]{ "Match" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.ListStatsResponse), global::Ahghee.Grpc.ListStatsResponse.Parser, new[]{ "Names" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.ListPoliciesRequest), global::Ahghee.Grpc.ListPoliciesRequest.Parser, new[]{ "Iris" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.ListPoliciesResponse), global::Ahghee.Grpc.ListPoliciesResponse.Parser, new[]{ "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.LoadFile), global::Ahghee.Grpc.LoadFile.Parser, new[]{ "Type", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ahghee.Grpc.LoadFileResponse), global::Ahghee.Grpc.LoadFileResponse.Parser, new[]{ "Progress", "Length" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// MemoryPointer needs fixed fields, so we can update them
  /// later without affecting the position of other messages
  /// </summary>
  public sealed partial class MemoryPointer : pb::IMessage<MemoryPointer> {
    private static readonly pb::MessageParser<MemoryPointer> _parser = new pb::MessageParser<MemoryPointer>(() => new MemoryPointer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemoryPointer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemoryPointer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemoryPointer(MemoryPointer other) : this() {
      partitionkey_ = other.partitionkey_;
      filename_ = other.filename_;
      offset_ = other.offset_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemoryPointer Clone() {
      return new MemoryPointer(this);
    }

    /// <summary>Field number for the "partitionkey" field.</summary>
    public const int PartitionkeyFieldNumber = 1;
    private uint partitionkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Partitionkey {
      get { return partitionkey_; }
      set {
        partitionkey_ = value;
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private uint filename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Filename {
      get { return filename_; }
      set {
        filename_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private ulong offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 4;
    private ulong length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemoryPointer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemoryPointer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Partitionkey != other.Partitionkey) return false;
      if (Filename != other.Filename) return false;
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Partitionkey != 0) hash ^= Partitionkey.GetHashCode();
      if (Filename != 0) hash ^= Filename.GetHashCode();
      if (Offset != 0UL) hash ^= Offset.GetHashCode();
      if (Length != 0UL) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

 [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemoryPointer other) {
      if (other == null) {
        return;
      }
      if (other.Partitionkey != 0) {
        Partitionkey = other.Partitionkey;
      }
      if (other.Filename != 0) {
        Filename = other.Filename;
      }
      if (other.Offset != 0UL) {
        Offset = other.Offset;
      }
      if (other.Length != 0UL) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Partitionkey = input.ReadFixed32();
            break;
          }
          case 21: {
            Filename = input.ReadFixed32();
            break;
          }
          case 25: {
            Offset = input.ReadFixed64();
            break;
          }
          case 33: {
            Length = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TypeBytes : pb::IMessage<TypeBytes> {
    private static readonly pb::MessageParser<TypeBytes> _parser = new pb::MessageParser<TypeBytes>(() => new TypeBytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeBytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeBytes(TypeBytes other) : this() {
      typeiri_ = other.typeiri_;
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeBytes Clone() {
      return new TypeBytes(this);
    }

    /// <summary>Field number for the "typeiri" field.</summary>
    public const int TypeiriFieldNumber = 1;
    private string typeiri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Typeiri {
      get { return typeiri_; }
      set {
        typeiri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeBytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Typeiri != other.Typeiri) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Typeiri.Length != 0) hash ^= Typeiri.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Typeiri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Typeiri);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Typeiri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Typeiri);
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeBytes other) {
      if (other == null) {
        return;
      }
      if (other.Typeiri.Length != 0) {
        Typeiri = other.Typeiri;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Typeiri = input.ReadString();
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeID : pb::IMessage<NodeID> {
    private static readonly pb::MessageParser<NodeID> _parser = new pb::MessageParser<NodeID>(() => new NodeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeID(NodeID other) : this() {
      remote_ = other.remote_;
      iri_ = other.iri_;
      pointer_ = other.pointer_ != null ? other.pointer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeID Clone() {
      return new NodeID(this);
    }

    /// <summary>Field number for the "remote" field.</summary>
    public const int RemoteFieldNumber = 1;
    private string remote_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remote {
      get { return remote_; }
      set {
        remote_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iri" field.</summary>
    public const int IriFieldNumber = 2;
    private string iri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iri {
      get { return iri_; }
      set {
        iri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pointer" field.</summary>
    public const int PointerFieldNumber = 3;
    private global::Ahghee.Grpc.MemoryPointer pointer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.MemoryPointer Pointer {
      get { return pointer_; }
      set {
        pointer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Remote.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Remote);
      }
      if (Iri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Iri);
      }
      if (pointer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pointer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Remote.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remote);
      }
      if (Iri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Iri);
      }
      if (pointer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pointer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeID other) {
      if (other == null) {
        return;
      }
      if (other.Remote.Length != 0) {
        Remote = other.Remote;
      }
      if (other.Iri.Length != 0) {
        Iri = other.Iri;
      }
      if (other.pointer_ != null) {
        if (pointer_ == null) {
          Pointer = new global::Ahghee.Grpc.MemoryPointer();
        }
        Pointer.MergeFrom(other.Pointer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Remote = input.ReadString();
            break;
          }
          case 18: {
            Iri = input.ReadString();
            break;
          }
          case 26: {
            if (pointer_ == null) {
              Pointer = new global::Ahghee.Grpc.MemoryPointer();
            }
            input.ReadMessage(Pointer);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataBlock : pb::IMessage<DataBlock> {
    private static readonly pb::MessageParser<DataBlock> _parser = new pb::MessageParser<DataBlock>(() => new DataBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBlock(DataBlock other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.Nodeid:
          Nodeid = other.Nodeid.Clone();
          break;
        case DataOneofCase.Metabytes:
          Metabytes = other.Metabytes.Clone();
          break;
        case DataOneofCase.Str:
          Str = other.Str;
          break;
        case DataOneofCase.I32:
          I32 = other.I32;
          break;
        case DataOneofCase.I64:
          I64 = other.I64;
          break;
        case DataOneofCase.Ui32:
          Ui32 = other.Ui32;
          break;
        case DataOneofCase.Ui64:
          Ui64 = other.Ui64;
          break;
        case DataOneofCase.D:
          D = other.D;
          break;
        case DataOneofCase.F:
          F = other.F;
          break;
        case DataOneofCase.B:
          B = other.B;
          break;
        case DataOneofCase.Memorypointer:
          Memorypointer = other.Memorypointer.Clone();
          break;
        case DataOneofCase.Array:
          Array = other.Array.Clone();
          break;
        case DataOneofCase.Map:
          Map = other.Map.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBlock Clone() {
      return new DataBlock(this);
    }

    /// <summary>Field number for the "nodeid" field.</summary>
    public const int NodeidFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.NodeID Nodeid {
      get { return dataCase_ == DataOneofCase.Nodeid ? (global::Ahghee.Grpc.NodeID) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Nodeid;
      }
    }

    /// <summary>Field number for the "metabytes" field.</summary>
    public const int MetabytesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.TypeBytes Metabytes {
      get { return dataCase_ == DataOneofCase.Metabytes ? (global::Ahghee.Grpc.TypeBytes) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Metabytes;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return dataCase_ == DataOneofCase.Str ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Str;
      }
    }

    /// <summary>Field number for the "i32" field.</summary>
    public const int I32FieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I32 {
      get { return dataCase_ == DataOneofCase.I32 ? (int) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.I32;
      }
    }

    /// <summary>Field number for the "i64" field.</summary>
    public const int I64FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long I64 {
      get { return dataCase_ == DataOneofCase.I64 ? (long) data_ : 0L; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.I64;
      }
    }

    /// <summary>Field number for the "ui32" field.</summary>
    public const int Ui32FieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Ui32 {
      get { return dataCase_ == DataOneofCase.Ui32 ? (uint) data_ : 0; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.Ui32;
      }
    }

    /// <summary>Field number for the "ui64" field.</summary>
    public const int Ui64FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Ui64 {
      get { return dataCase_ == DataOneofCase.Ui64 ? (ulong) data_ : 0UL; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.Ui64;
      }
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double D {
      get { return dataCase_ == DataOneofCase.D ? (double) data_ : 0D; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.D;
      }
    }

    /// <summary>Field number for the "f" field.</summary>
    public const int FFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float F {
      get { return dataCase_ == DataOneofCase.F ? (float) data_ : 0F; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.F;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool B {
      get { return dataCase_ == DataOneofCase.B ? (bool) data_ : false; }
      set {
        data_ = value;
        dataCase_ = DataOneofCase.B;
      }
    }

    /// <summary>Field number for the "memorypointer" field.</summary>
    public const int MemorypointerFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.MemoryPointer Memorypointer {
      get { return dataCase_ == DataOneofCase.Memorypointer ? (global::Ahghee.Grpc.MemoryPointer) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Memorypointer;
      }
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.Array Array {
      get { return dataCase_ == DataOneofCase.Array ? (global::Ahghee.Grpc.Array) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Array;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 13;
    /// <summary>
    ///todo: add support for protobuf any
    ///google.protobuf.Any any = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.Map Map {
      get { return dataCase_ == DataOneofCase.Map ? (global::Ahghee.Grpc.Map) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Map;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Nodeid = 1,
      Metabytes = 2,
      Str = 3,
      I32 = 4,
      I64 = 5,
      Ui32 = 6,
      Ui64 = 7,
      D = 8,
      F = 9,
      B = 10,
      Memorypointer = 11,
      Array = 12,
      Map = 13,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nodeid, other.Nodeid)) return false;
      if (!object.Equals(Metabytes, other.Metabytes)) return false;
      if (Str != other.Str) return false;
      if (I32 != other.I32) return false;
      if (I64 != other.I64) return false;
      if (Ui32 != other.Ui32) return false;
      if (Ui64 != other.Ui64) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(D, other.D)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(F, other.F)) return false;
      if (B != other.B) return false;
      if (!object.Equals(Memorypointer, other.Memorypointer)) return false;
      if (!object.Equals(Array, other.Array)) return false;
      if (!object.Equals(Map, other.Map)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.Nodeid) hash ^= Nodeid.GetHashCode();
      if (dataCase_ == DataOneofCase.Metabytes) hash ^= Metabytes.GetHashCode();
      if (dataCase_ == DataOneofCase.Str) hash ^= Str.GetHashCode();
      if (dataCase_ == DataOneofCase.I32) hash ^= I32.GetHashCode();
      if (dataCase_ == DataOneofCase.I64) hash ^= I64.GetHashCode();
      if (dataCase_ == DataOneofCase.Ui32) hash ^= Ui32.GetHashCode();
      if (dataCase_ == DataOneofCase.Ui64) hash ^= Ui64.GetHashCode();
      if (dataCase_ == DataOneofCase.D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(D);
      if (dataCase_ == DataOneofCase.F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(F);
      if (dataCase_ == DataOneofCase.B) hash ^= B.GetHashCode();
      if (dataCase_ == DataOneofCase.Memorypointer) hash ^= Memorypointer.GetHashCode();
      if (dataCase_ == DataOneofCase.Array) hash ^= Array.GetHashCode();
      if (dataCase_ == DataOneofCase.Map) hash ^= Map.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.Nodeid) {
        output.WriteRawTag(10);
        output.WriteMessage(Nodeid);
      }
      if (dataCase_ == DataOneofCase.Metabytes) {
        output.WriteRawTag(18);
        output.WriteMessage(Metabytes);
      }
      if (dataCase_ == DataOneofCase.Str) {
        output.WriteRawTag(26);
        output.WriteString(Str);
      }
      if (dataCase_ == DataOneofCase.I32) {
        output.WriteRawTag(32);
        output.WriteInt32(I32);
      }
      if (dataCase_ == DataOneofCase.I64) {
        output.WriteRawTag(40);
        output.WriteInt64(I64);
      }
      if (dataCase_ == DataOneofCase.Ui32) {
        output.WriteRawTag(48);
        output.WriteUInt32(Ui32);
      }
      if (dataCase_ == DataOneofCase.Ui64) {
        output.WriteRawTag(56);
        output.WriteUInt64(Ui64);
      }
      if (dataCase_ == DataOneofCase.D) {
        output.WriteRawTag(65);
        output.WriteDouble(D);
      }
      if (dataCase_ == DataOneofCase.F) {
        output.WriteRawTag(77);
        output.WriteFloat(F);
      }
      if (dataCase_ == DataOneofCase.B) {
        output.WriteRawTag(80);
        output.WriteBool(B);
      }
      if (dataCase_ == DataOneofCase.Memorypointer) {
        output.WriteRawTag(90);
        output.WriteMessage(Memorypointer);
      }
      if (dataCase_ == DataOneofCase.Array) {
        output.WriteRawTag(98);
        output.WriteMessage(Array);
      }
      if (dataCase_ == DataOneofCase.Map) {
        output.WriteRawTag(106);
        output.WriteMessage(Map);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.Nodeid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nodeid);
      }
      if (dataCase_ == DataOneofCase.Metabytes) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metabytes);
      }
      if (dataCase_ == DataOneofCase.Str) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (dataCase_ == DataOneofCase.I32) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I32);
      }
      if (dataCase_ == DataOneofCase.I64) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(I64);
      }
      if (dataCase_ == DataOneofCase.Ui32) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ui32);
      }
      if (dataCase_ == DataOneofCase.Ui64) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ui64);
      }
      if (dataCase_ == DataOneofCase.D) {
        size += 1 + 8;
      }
      if (dataCase_ == DataOneofCase.F) {
        size += 1 + 4;
      }
      if (dataCase_ == DataOneofCase.B) {
        size += 1 + 1;
      }
      if (dataCase_ == DataOneofCase.Memorypointer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memorypointer);
      }
      if (dataCase_ == DataOneofCase.Array) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Array);
      }
      if (dataCase_ == DataOneofCase.Map) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataBlock other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.Nodeid:
          if (Nodeid == null) {
            Nodeid = new global::Ahghee.Grpc.NodeID();
          }
          Nodeid.MergeFrom(other.Nodeid);
          break;
        case DataOneofCase.Metabytes:
          if (Metabytes == null) {
            Metabytes = new global::Ahghee.Grpc.TypeBytes();
          }
          Metabytes.MergeFrom(other.Metabytes);
          break;
        case DataOneofCase.Str:
          Str = other.Str;
          break;
        case DataOneofCase.I32:
          I32 = other.I32;
          break;
        case DataOneofCase.I64:
          I64 = other.I64;
          break;
        case DataOneofCase.Ui32:
          Ui32 = other.Ui32;
          break;
        case DataOneofCase.Ui64:
          Ui64 = other.Ui64;
          break;
        case DataOneofCase.D:
          D = other.D;
          break;
        case DataOneofCase.F:
          F = other.F;
          break;
        case DataOneofCase.B:
          B = other.B;
          break;
        case DataOneofCase.Memorypointer:
          if (Memorypointer == null) {
            Memorypointer = new global::Ahghee.Grpc.MemoryPointer();
          }
          Memorypointer.MergeFrom(other.Memorypointer);
          break;
        case DataOneofCase.Array:
          if (Array == null) {
            Array = new global::Ahghee.Grpc.Array();
          }
          Array.MergeFrom(other.Array);
          break;
        case DataOneofCase.Map:
          if (Map == null) {
            Map = new global::Ahghee.Grpc.Map();
          }
          Map.MergeFrom(other.Map);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ahghee.Grpc.NodeID subBuilder = new global::Ahghee.Grpc.NodeID();
            if (dataCase_ == DataOneofCase.Nodeid) {
              subBuilder.MergeFrom(Nodeid);
            }
            input.ReadMessage(subBuilder);
            Nodeid = subBuilder;
            break;
          }
          case 18: {
            global::Ahghee.Grpc.TypeBytes subBuilder = new global::Ahghee.Grpc.TypeBytes();
            if (dataCase_ == DataOneofCase.Metabytes) {
              subBuilder.MergeFrom(Metabytes);
            }
            input.ReadMessage(subBuilder);
            Metabytes = subBuilder;
            break;
          }
          case 26: {
            Str = input.ReadString();
            break;
          }
          case 32: {
            I32 = input.ReadInt32();
            break;
          }
          case 40: {
            I64 = input.ReadInt64();
            break;
          }
          case 48: {
            Ui32 = input.ReadUInt32();
            break;
          }
          case 56: {
            Ui64 = input.ReadUInt64();
            break;
          }
          case 65: {
            D = input.ReadDouble();
            break;
          }
          case 77: {
            F = input.ReadFloat();
            break;
          }
          case 80: {
            B = input.ReadBool();
            break;
          }
          case 90: {
            global::Ahghee.Grpc.MemoryPointer subBuilder = new global::Ahghee.Grpc.MemoryPointer();
            if (dataCase_ == DataOneofCase.Memorypointer) {
              subBuilder.MergeFrom(Memorypointer);
            }
            input.ReadMessage(subBuilder);
            Memorypointer = subBuilder;
            break;
          }
          case 98: {
            global::Ahghee.Grpc.Array subBuilder = new global::Ahghee.Grpc.Array();
            if (dataCase_ == DataOneofCase.Array) {
              subBuilder.MergeFrom(Array);
            }
            input.ReadMessage(subBuilder);
            Array = subBuilder;
            break;
          }
          case 106: {
            global::Ahghee.Grpc.Map subBuilder = new global::Ahghee.Grpc.Map();
            if (dataCase_ == DataOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Array : pb::IMessage<Array> {
    private static readonly pb::MessageParser<Array> _parser = new pb::MessageParser<Array>(() => new Array());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Array> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Array() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Array(Array other) : this() {
      item_ = other.item_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Array Clone() {
      return new Array(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.DataBlock> _repeated_item_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.DataBlock.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.DataBlock> item_ = new pbc::RepeatedField<global::Ahghee.Grpc.DataBlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.DataBlock> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Array);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Array other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!item_.Equals(other.item_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= item_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      item_.WriteTo(output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Array other) {
      if (other == null) {
        return;
      }
      item_.Add(other.item_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Map : pb::IMessage<Map> {
    private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map(Map other) : this() {
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map Clone() {
      return new Map(this);
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.KeyValue> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.KeyValue> attributes_ = new pbc::RepeatedField<global::Ahghee.Grpc.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.KeyValue> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Map other) {
      if (other == null) {
        return;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TMD : pb::IMessage<TMD> {
    private static readonly pb::MessageParser<TMD> _parser = new pb::MessageParser<TMD>(() => new TMD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TMD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TMD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TMD(TMD other) : this() {
      timestamp_ = other.timestamp_;
      metaData_ = other.metaData_ != null ? other.metaData_.Clone() : null;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TMD Clone() {
      return new TMD(this);
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "MetaData" field.</summary>
    public const int MetaDataFieldNumber = 2;
    private global::Ahghee.Grpc.DataBlock metaData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.DataBlock MetaData {
      get { return metaData_; }
      set {
        metaData_ = value;
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::Ahghee.Grpc.DataBlock data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.DataBlock Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TMD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TMD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(MetaData, other.MetaData)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (metaData_ != null) hash ^= MetaData.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (metaData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaData);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (metaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaData);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TMD other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.metaData_ != null) {
        if (metaData_ == null) {
          MetaData = new global::Ahghee.Grpc.DataBlock();
        }
        MetaData.MergeFrom(other.MetaData);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Ahghee.Grpc.DataBlock();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 18: {
            if (metaData_ == null) {
              MetaData = new global::Ahghee.Grpc.DataBlock();
            }
            input.ReadMessage(MetaData);
            break;
          }
          case 26: {
            if (data_ == null) {
              Data = new global::Ahghee.Grpc.DataBlock();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyValue : pb::IMessage<KeyValue> {
    private static readonly pb::MessageParser<KeyValue> _parser = new pb::MessageParser<KeyValue>(() => new KeyValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue(KeyValue other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyValue Clone() {
      return new KeyValue(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Ahghee.Grpc.TMD key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.TMD Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Ahghee.Grpc.TMD value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.TMD Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyValue other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Ahghee.Grpc.TMD();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Ahghee.Grpc.TMD();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Ahghee.Grpc.TMD();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Ahghee.Grpc.TMD();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      fragments_ = other.fragments_.Clone();
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Ahghee.Grpc.NodeID id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.NodeID Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "fragments" field.</summary>
    public const int FragmentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.MemoryPointer> _repeated_fragments_codec
        = pb::FieldCodec.ForMessage(26, global::Ahghee.Grpc.MemoryPointer.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> fragments_ = new pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> Fragments {
      get { return fragments_; }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.KeyValue> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(34, global::Ahghee.Grpc.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.KeyValue> attributes_ = new pbc::RepeatedField<global::Ahghee.Grpc.KeyValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.KeyValue> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if(!fragments_.Equals(other.fragments_)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      hash ^= fragments_.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      fragments_.WriteTo(output, _repeated_fragments_codec);
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      size += fragments_.CalculateSize(_repeated_fragments_codec);
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Ahghee.Grpc.NodeID();
        }
        Id.MergeFrom(other.Id);
      }
      fragments_.Add(other.fragments_);
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Ahghee.Grpc.NodeID();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            fragments_.AddEntriesFrom(input, _repeated_fragments_codec);
            break;
          }
          case 34: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Pointers : pb::IMessage<Pointers> {
    private static readonly pb::MessageParser<Pointers> _parser = new pb::MessageParser<Pointers>(() => new Pointers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pointers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pointers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pointers(Pointers other) : this() {
      pointers_ = other.pointers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pointers Clone() {
      return new Pointers(this);
    }

    /// <summary>Field number for the "pointers" field.</summary>
    public const int Pointers_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.MemoryPointer> _repeated_pointers_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.MemoryPointer.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> pointers_ = new pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.MemoryPointer> Pointers_ {
      get { return pointers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pointers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pointers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pointers_.Equals(other.pointers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pointers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pointers_.WriteTo(output, _repeated_pointers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pointers_.CalculateSize(_repeated_pointers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pointers other) {
      if (other == null) {
        return;
      }
      pointers_.Add(other.pointers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pointers_.AddEntriesFrom(input, _repeated_pointers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Range : pb::IMessage<Range> {
    private static readonly pb::MessageParser<Range> _parser = new pb::MessageParser<Range>(() => new Range());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Range> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range(Range other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range Clone() {
      return new Range(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private int from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private int to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Range);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Range other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From != 0) hash ^= From.GetHashCode();
      if (To != 0) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (To != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(From);
      }
      if (To != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Range other) {
      if (other == null) {
        return;
      }
      if (other.From != 0) {
        From = other.From;
      }
      if (other.To != 0) {
        To = other.To;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FollowOperator : pb::IMessage<FollowOperator> {
    private static readonly pb::MessageParser<FollowOperator> _parser = new pb::MessageParser<FollowOperator>(() => new FollowOperator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FollowOperator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FollowOperator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FollowOperator(FollowOperator other) : this() {
      switch (other.FollowCase) {
        case FollowOneofCase.FollowAny:
          FollowAny = other.FollowAny.Clone();
          break;
        case FollowOneofCase.FollowEdge:
          FollowEdge = other.FollowEdge.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FollowOperator Clone() {
      return new FollowOperator(this);
    }

    /// <summary>Field number for the "followAny" field.</summary>
    public const int FollowAnyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FollowOperator.Types.FollowAny FollowAny {
      get { return followCase_ == FollowOneofCase.FollowAny ? (global::Ahghee.Grpc.FollowOperator.Types.FollowAny) follow_ : null; }
      set {
        follow_ = value;
        followCase_ = value == null ? FollowOneofCase.None : FollowOneofCase.FollowAny;
      }
    }

    /// <summary>Field number for the "followEdge" field.</summary>
    public const int FollowEdgeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FollowOperator.Types.EdgeNum FollowEdge {
      get { return followCase_ == FollowOneofCase.FollowEdge ? (global::Ahghee.Grpc.FollowOperator.Types.EdgeNum) follow_ : null; }
      set {
        follow_ = value;
        followCase_ = value == null ? FollowOneofCase.None : FollowOneofCase.FollowEdge;
      }
    }

    private object follow_;
    /// <summary>Enum of possible cases for the "Follow" oneof.</summary>
    public enum FollowOneofCase {
      None = 0,
      FollowAny = 1,
      FollowEdge = 2,
    }
    private FollowOneofCase followCase_ = FollowOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FollowOneofCase FollowCase {
      get { return followCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFollow() {
      followCase_ = FollowOneofCase.None;
      follow_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FollowOperator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FollowOperator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FollowAny, other.FollowAny)) return false;
      if (!object.Equals(FollowEdge, other.FollowEdge)) return false;
      if (FollowCase != other.FollowCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (followCase_ == FollowOneofCase.FollowAny) hash ^= FollowAny.GetHashCode();
      if (followCase_ == FollowOneofCase.FollowEdge) hash ^= FollowEdge.GetHashCode();
      hash ^= (int) followCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (followCase_ == FollowOneofCase.FollowAny) {
        output.WriteRawTag(10);
        output.WriteMessage(FollowAny);
      }
      if (followCase_ == FollowOneofCase.FollowEdge) {
        output.WriteRawTag(18);
        output.WriteMessage(FollowEdge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (followCase_ == FollowOneofCase.FollowAny) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowAny);
      }
      if (followCase_ == FollowOneofCase.FollowEdge) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowEdge);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FollowOperator other) {
      if (other == null) {
        return;
      }
      switch (other.FollowCase) {
        case FollowOneofCase.FollowAny:
          if (FollowAny == null) {
            FollowAny = new global::Ahghee.Grpc.FollowOperator.Types.FollowAny();
          }
          FollowAny.MergeFrom(other.FollowAny);
          break;
        case FollowOneofCase.FollowEdge:
          if (FollowEdge == null) {
            FollowEdge = new global::Ahghee.Grpc.FollowOperator.Types.EdgeNum();
          }
          FollowEdge.MergeFrom(other.FollowEdge);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ahghee.Grpc.FollowOperator.Types.FollowAny subBuilder = new global::Ahghee.Grpc.FollowOperator.Types.FollowAny();
            if (followCase_ == FollowOneofCase.FollowAny) {
              subBuilder.MergeFrom(FollowAny);
            }
            input.ReadMessage(subBuilder);
            FollowAny = subBuilder;
            break;
          }
          case 18: {
            global::Ahghee.Grpc.FollowOperator.Types.EdgeNum subBuilder = new global::Ahghee.Grpc.FollowOperator.Types.EdgeNum();
            if (followCase_ == FollowOneofCase.FollowEdge) {
              subBuilder.MergeFrom(FollowEdge);
            }
            input.ReadMessage(subBuilder);
            FollowEdge = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FollowOperator message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FollowAny : pb::IMessage<FollowAny> {
        private static readonly pb::MessageParser<FollowAny> _parser = new pb::MessageParser<FollowAny>(() => new FollowAny());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FollowAny> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FollowOperator.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FollowAny() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FollowAny(FollowAny other) : this() {
          range_ = other.range_ != null ? other.range_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FollowAny Clone() {
          return new FollowAny(this);
        }

        /// <summary>Field number for the "range" field.</summary>
        public const int RangeFieldNumber = 1;
        private global::Ahghee.Grpc.Range range_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.Range Range {
          get { return range_; }
          set {
            range_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FollowAny);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FollowAny other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Range, other.Range)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (range_ != null) hash ^= Range.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (range_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Range);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (range_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FollowAny other) {
          if (other == null) {
            return;
          }
          if (other.range_ != null) {
            if (range_ == null) {
              Range = new global::Ahghee.Grpc.Range();
            }
            Range.MergeFrom(other.Range);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (range_ == null) {
                  Range = new global::Ahghee.Grpc.Range();
                }
                input.ReadMessage(Range);
                break;
              }
            }
          }
        }

      }

      public sealed partial class EdgeRange : pb::IMessage<EdgeRange> {
        private static readonly pb::MessageParser<EdgeRange> _parser = new pb::MessageParser<EdgeRange>(() => new EdgeRange());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EdgeRange> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FollowOperator.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeRange() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeRange(EdgeRange other) : this() {
          edge_ = other.edge_ != null ? other.edge_.Clone() : null;
          range_ = other.range_ != null ? other.range_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeRange Clone() {
          return new EdgeRange(this);
        }

        /// <summary>Field number for the "edge" field.</summary>
        public const int EdgeFieldNumber = 1;
        private global::Ahghee.Grpc.DataBlock edge_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.DataBlock Edge {
          get { return edge_; }
          set {
            edge_ = value;
          }
        }

        /// <summary>Field number for the "range" field.</summary>
        public const int RangeFieldNumber = 2;
        private global::Ahghee.Grpc.Range range_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.Range Range {
          get { return range_; }
          set {
            range_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EdgeRange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EdgeRange other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Edge, other.Edge)) return false;
          if (!object.Equals(Range, other.Range)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (edge_ != null) hash ^= Edge.GetHashCode();
          if (range_ != null) hash ^= Range.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (edge_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Edge);
          }
          if (range_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Range);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (edge_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Edge);
          }
          if (range_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EdgeRange other) {
          if (other == null) {
            return;
          }
          if (other.edge_ != null) {
            if (edge_ == null) {
              Edge = new global::Ahghee.Grpc.DataBlock();
            }
            Edge.MergeFrom(other.Edge);
          }
          if (other.range_ != null) {
            if (range_ == null) {
              Range = new global::Ahghee.Grpc.Range();
            }
            Range.MergeFrom(other.Range);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (edge_ == null) {
                  Edge = new global::Ahghee.Grpc.DataBlock();
                }
                input.ReadMessage(Edge);
                break;
              }
              case 18: {
                if (range_ == null) {
                  Range = new global::Ahghee.Grpc.Range();
                }
                input.ReadMessage(Range);
                break;
              }
            }
          }
        }

      }

      public sealed partial class EdgeCMP : pb::IMessage<EdgeCMP> {
        private static readonly pb::MessageParser<EdgeCMP> _parser = new pb::MessageParser<EdgeCMP>(() => new EdgeCMP());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EdgeCMP> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FollowOperator.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeCMP() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeCMP(EdgeCMP other) : this() {
          left_ = other.left_ != null ? other.left_.Clone() : null;
          bOOLOP_ = other.bOOLOP_;
          right_ = other.right_ != null ? other.right_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeCMP Clone() {
          return new EdgeCMP(this);
        }

        /// <summary>Field number for the "left" field.</summary>
        public const int LeftFieldNumber = 1;
        private global::Ahghee.Grpc.FollowOperator.Types.EdgeNum left_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FollowOperator.Types.EdgeNum Left {
          get { return left_; }
          set {
            left_ = value;
          }
        }

        /// <summary>Field number for the "BOOLOP" field.</summary>
        public const int BOOLOPFieldNumber = 2;
        private string bOOLOP_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BOOLOP {
          get { return bOOLOP_; }
          set {
            bOOLOP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "right" field.</summary>
        public const int RightFieldNumber = 3;
        private global::Ahghee.Grpc.FollowOperator.Types.EdgeNum right_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FollowOperator.Types.EdgeNum Right {
          get { return right_; }
          set {
            right_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EdgeCMP);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EdgeCMP other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Left, other.Left)) return false;
          if (BOOLOP != other.BOOLOP) return false;
          if (!object.Equals(Right, other.Right)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (left_ != null) hash ^= Left.GetHashCode();
          if (BOOLOP.Length != 0) hash ^= BOOLOP.GetHashCode();
          if (right_ != null) hash ^= Right.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (left_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Left);
          }
          if (BOOLOP.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(BOOLOP);
          }
          if (right_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Right);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (left_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
          }
          if (BOOLOP.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BOOLOP);
          }
          if (right_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EdgeCMP other) {
          if (other == null) {
            return;
          }
          if (other.left_ != null) {
            if (left_ == null) {
              Left = new global::Ahghee.Grpc.FollowOperator.Types.EdgeNum();
            }
            Left.MergeFrom(other.Left);
          }
          if (other.BOOLOP.Length != 0) {
            BOOLOP = other.BOOLOP;
          }
          if (other.right_ != null) {
            if (right_ == null) {
              Right = new global::Ahghee.Grpc.FollowOperator.Types.EdgeNum();
            }
            Right.MergeFrom(other.Right);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (left_ == null) {
                  Left = new global::Ahghee.Grpc.FollowOperator.Types.EdgeNum();
                }
                input.ReadMessage(Left);
                break;
              }
              case 18: {
                BOOLOP = input.ReadString();
                break;
              }
              case 26: {
                if (right_ == null) {
                  Right = new global::Ahghee.Grpc.FollowOperator.Types.EdgeNum();
                }
                input.ReadMessage(Right);
                break;
              }
            }
          }
        }

      }

      public sealed partial class EdgeNum : pb::IMessage<EdgeNum> {
        private static readonly pb::MessageParser<EdgeNum> _parser = new pb::MessageParser<EdgeNum>(() => new EdgeNum());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EdgeNum> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FollowOperator.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeNum() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeNum(EdgeNum other) : this() {
          switch (other.OpCase) {
            case OpOneofCase.EdgeRange:
              EdgeRange = other.EdgeRange.Clone();
              break;
            case OpOneofCase.EdgeCmp:
              EdgeCmp = other.EdgeCmp.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EdgeNum Clone() {
          return new EdgeNum(this);
        }

        /// <summary>Field number for the "edgeRange" field.</summary>
        public const int EdgeRangeFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FollowOperator.Types.EdgeRange EdgeRange {
          get { return opCase_ == OpOneofCase.EdgeRange ? (global::Ahghee.Grpc.FollowOperator.Types.EdgeRange) op_ : null; }
          set {
            op_ = value;
            opCase_ = value == null ? OpOneofCase.None : OpOneofCase.EdgeRange;
          }
        }

        /// <summary>Field number for the "edgeCmp" field.</summary>
        public const int EdgeCmpFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP EdgeCmp {
          get { return opCase_ == OpOneofCase.EdgeCmp ? (global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP) op_ : null; }
          set {
            op_ = value;
            opCase_ = value == null ? OpOneofCase.None : OpOneofCase.EdgeCmp;
          }
        }

        private object op_;
        /// <summary>Enum of possible cases for the "op" oneof.</summary>
        public enum OpOneofCase {
          None = 0,
          EdgeRange = 1,
          EdgeCmp = 2,
        }
        private OpOneofCase opCase_ = OpOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OpOneofCase OpCase {
          get { return opCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearOp() {
          opCase_ = OpOneofCase.None;
          op_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EdgeNum);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EdgeNum other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(EdgeRange, other.EdgeRange)) return false;
          if (!object.Equals(EdgeCmp, other.EdgeCmp)) return false;
          if (OpCase != other.OpCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (opCase_ == OpOneofCase.EdgeRange) hash ^= EdgeRange.GetHashCode();
          if (opCase_ == OpOneofCase.EdgeCmp) hash ^= EdgeCmp.GetHashCode();
          hash ^= (int) opCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (opCase_ == OpOneofCase.EdgeRange) {
            output.WriteRawTag(10);
            output.WriteMessage(EdgeRange);
          }
          if (opCase_ == OpOneofCase.EdgeCmp) {
            output.WriteRawTag(18);
            output.WriteMessage(EdgeCmp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (opCase_ == OpOneofCase.EdgeRange) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EdgeRange);
          }
          if (opCase_ == OpOneofCase.EdgeCmp) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EdgeCmp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EdgeNum other) {
          if (other == null) {
            return;
          }
          switch (other.OpCase) {
            case OpOneofCase.EdgeRange:
              if (EdgeRange == null) {
                EdgeRange = new global::Ahghee.Grpc.FollowOperator.Types.EdgeRange();
              }
              EdgeRange.MergeFrom(other.EdgeRange);
              break;
            case OpOneofCase.EdgeCmp:
              if (EdgeCmp == null) {
                EdgeCmp = new global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP();
              }
              EdgeCmp.MergeFrom(other.EdgeCmp);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Ahghee.Grpc.FollowOperator.Types.EdgeRange subBuilder = new global::Ahghee.Grpc.FollowOperator.Types.EdgeRange();
                if (opCase_ == OpOneofCase.EdgeRange) {
                  subBuilder.MergeFrom(EdgeRange);
                }
                input.ReadMessage(subBuilder);
                EdgeRange = subBuilder;
                break;
              }
              case 18: {
                global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP subBuilder = new global::Ahghee.Grpc.FollowOperator.Types.EdgeCMP();
                if (opCase_ == OpOneofCase.EdgeCmp) {
                  subBuilder.MergeFrom(EdgeCmp);
                }
                input.ReadMessage(subBuilder);
                EdgeCmp = subBuilder;
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class FilterOperator : pb::IMessage<FilterOperator> {
    private static readonly pb::MessageParser<FilterOperator> _parser = new pb::MessageParser<FilterOperator>(() => new FilterOperator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterOperator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterOperator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterOperator(FilterOperator other) : this() {
      compare_ = other.compare_ != null ? other.compare_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterOperator Clone() {
      return new FilterOperator(this);
    }

    /// <summary>Field number for the "compare" field.</summary>
    public const int CompareFieldNumber = 1;
    private global::Ahghee.Grpc.FilterOperator.Types.Compare compare_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FilterOperator.Types.Compare Compare {
      get { return compare_; }
      set {
        compare_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterOperator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterOperator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Compare, other.Compare)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (compare_ != null) hash ^= Compare.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (compare_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Compare);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (compare_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Compare);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterOperator other) {
      if (other == null) {
        return;
      }
      if (other.compare_ != null) {
        if (compare_ == null) {
          Compare = new global::Ahghee.Grpc.FilterOperator.Types.Compare();
        }
        Compare.MergeFrom(other.Compare);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (compare_ == null) {
              Compare = new global::Ahghee.Grpc.FilterOperator.Types.Compare();
            }
            input.ReadMessage(Compare);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FilterOperator message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Compare : pb::IMessage<Compare> {
        private static readonly pb::MessageParser<Compare> _parser = new pb::MessageParser<Compare>(() => new Compare());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Compare> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FilterOperator.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Compare() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Compare(Compare other) : this() {
          switch (other.CmpTypeCase) {
            case CmpTypeOneofCase.KevValueCmp:
              KevValueCmp = other.KevValueCmp.Clone();
              break;
            case CmpTypeOneofCase.CompoundCmp:
              CompoundCmp = other.CompoundCmp.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Compare Clone() {
          return new Compare(this);
        }

        /// <summary>Field number for the "kevValueCmp" field.</summary>
        public const int KevValueCmpFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue KevValueCmp {
          get { return cmpTypeCase_ == CmpTypeOneofCase.KevValueCmp ? (global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue) cmpType_ : null; }
          set {
            cmpType_ = value;
            cmpTypeCase_ = value == null ? CmpTypeOneofCase.None : CmpTypeOneofCase.KevValueCmp;
          }
        }

        /// <summary>Field number for the "compoundCmp" field.</summary>
        public const int CompoundCmpFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FilterOperator.Types.CompareCompound CompoundCmp {
          get { return cmpTypeCase_ == CmpTypeOneofCase.CompoundCmp ? (global::Ahghee.Grpc.FilterOperator.Types.CompareCompound) cmpType_ : null; }
          set {
            cmpType_ = value;
            cmpTypeCase_ = value == null ? CmpTypeOneofCase.None : CmpTypeOneofCase.CompoundCmp;
          }
        }

        private object cmpType_;
        /// <summary>Enum of possible cases for the "cmpType" oneof.</summary>
        public enum CmpTypeOneofCase {
          None = 0,
          KevValueCmp = 1,
          CompoundCmp = 2,
        }
        private CmpTypeOneofCase cmpTypeCase_ = CmpTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CmpTypeOneofCase CmpTypeCase {
          get { return cmpTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCmpType() {
          cmpTypeCase_ = CmpTypeOneofCase.None;
          cmpType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Compare);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Compare other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(KevValueCmp, other.KevValueCmp)) return false;
          if (!object.Equals(CompoundCmp, other.CompoundCmp)) return false;
          if (CmpTypeCase != other.CmpTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (cmpTypeCase_ == CmpTypeOneofCase.KevValueCmp) hash ^= KevValueCmp.GetHashCode();
          if (cmpTypeCase_ == CmpTypeOneofCase.CompoundCmp) hash ^= CompoundCmp.GetHashCode();
          hash ^= (int) cmpTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (cmpTypeCase_ == CmpTypeOneofCase.KevValueCmp) {
            output.WriteRawTag(10);
            output.WriteMessage(KevValueCmp);
          }
          if (cmpTypeCase_ == CmpTypeOneofCase.CompoundCmp) {
            output.WriteRawTag(18);
            output.WriteMessage(CompoundCmp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (cmpTypeCase_ == CmpTypeOneofCase.KevValueCmp) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(KevValueCmp);
          }
          if (cmpTypeCase_ == CmpTypeOneofCase.CompoundCmp) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompoundCmp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Compare other) {
          if (other == null) {
            return;
          }
          switch (other.CmpTypeCase) {
            case CmpTypeOneofCase.KevValueCmp:
              if (KevValueCmp == null) {
                KevValueCmp = new global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue();
              }
              KevValueCmp.MergeFrom(other.KevValueCmp);
              break;
            case CmpTypeOneofCase.CompoundCmp:
              if (CompoundCmp == null) {
                CompoundCmp = new global::Ahghee.Grpc.FilterOperator.Types.CompareCompound();
              }
              CompoundCmp.MergeFrom(other.CompoundCmp);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue subBuilder = new global::Ahghee.Grpc.FilterOperator.Types.CompareKeyValue();
                if (cmpTypeCase_ == CmpTypeOneofCase.KevValueCmp) {
                  subBuilder.MergeFrom(KevValueCmp);
                }
                input.ReadMessage(subBuilder);
                KevValueCmp = subBuilder;
                break;
              }
              case 18: {
                global::Ahghee.Grpc.FilterOperator.Types.CompareCompound subBuilder = new global::Ahghee.Grpc.FilterOperator.Types.CompareCompound();
                if (cmpTypeCase_ == CmpTypeOneofCase.CompoundCmp) {
                  subBuilder.MergeFrom(CompoundCmp);
                }
                input.ReadMessage(subBuilder);
                CompoundCmp = subBuilder;
                break;
              }
            }
          }
        }

      }

      public sealed partial class CompareKeyValue : pb::IMessage<CompareKeyValue> {
        private static readonly pb::MessageParser<CompareKeyValue> _parser = new pb::MessageParser<CompareKeyValue>(() => new CompareKeyValue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CompareKeyValue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FilterOperator.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompareKeyValue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompareKeyValue(CompareKeyValue other) : this() {
          property_ = other.property_ != null ? other.property_.Clone() : null;
          mATHOP_ = other.mATHOP_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompareKeyValue Clone() {
          return new CompareKeyValue(this);
        }

        /// <summary>Field number for the "Property" field.</summary>
        public const int PropertyFieldNumber = 1;
        private global::Ahghee.Grpc.DataBlock property_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.DataBlock Property {
          get { return property_; }
          set {
            property_ = value;
          }
        }

        /// <summary>Field number for the "MATHOP" field.</summary>
        public const int MATHOPFieldNumber = 2;
        private string mATHOP_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MATHOP {
          get { return mATHOP_; }
          set {
            mATHOP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Value" field.</summary>
        public const int ValueFieldNumber = 3;
        private global::Ahghee.Grpc.DataBlock value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.DataBlock Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CompareKeyValue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CompareKeyValue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Property, other.Property)) return false;
          if (MATHOP != other.MATHOP) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (property_ != null) hash ^= Property.GetHashCode();
          if (MATHOP.Length != 0) hash ^= MATHOP.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (property_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Property);
          }
          if (MATHOP.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MATHOP);
          }
          if (value_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (property_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
          }
          if (MATHOP.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MATHOP);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CompareKeyValue other) {
          if (other == null) {
            return;
          }
          if (other.property_ != null) {
            if (property_ == null) {
              Property = new global::Ahghee.Grpc.DataBlock();
            }
            Property.MergeFrom(other.Property);
          }
          if (other.MATHOP.Length != 0) {
            MATHOP = other.MATHOP;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Ahghee.Grpc.DataBlock();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (property_ == null) {
                  Property = new global::Ahghee.Grpc.DataBlock();
                }
                input.ReadMessage(Property);
                break;
              }
              case 18: {
                MATHOP = input.ReadString();
                break;
              }
              case 26: {
                if (value_ == null) {
                  Value = new global::Ahghee.Grpc.DataBlock();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }

      }

      public sealed partial class CompareCompound : pb::IMessage<CompareCompound> {
        private static readonly pb::MessageParser<CompareCompound> _parser = new pb::MessageParser<CompareCompound>(() => new CompareCompound());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CompareCompound> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FilterOperator.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompareCompound() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompareCompound(CompareCompound other) : this() {
          left_ = other.left_ != null ? other.left_.Clone() : null;
          bOOLOP_ = other.bOOLOP_;
          right_ = other.right_ != null ? other.right_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CompareCompound Clone() {
          return new CompareCompound(this);
        }

        /// <summary>Field number for the "left" field.</summary>
        public const int LeftFieldNumber = 1;
        private global::Ahghee.Grpc.FilterOperator.Types.Compare left_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FilterOperator.Types.Compare Left {
          get { return left_; }
          set {
            left_ = value;
          }
        }

        /// <summary>Field number for the "BOOLOP" field.</summary>
        public const int BOOLOPFieldNumber = 2;
        private string bOOLOP_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BOOLOP {
          get { return bOOLOP_; }
          set {
            bOOLOP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "right" field.</summary>
        public const int RightFieldNumber = 3;
        private global::Ahghee.Grpc.FilterOperator.Types.Compare right_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FilterOperator.Types.Compare Right {
          get { return right_; }
          set {
            right_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CompareCompound);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CompareCompound other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Left, other.Left)) return false;
          if (BOOLOP != other.BOOLOP) return false;
          if (!object.Equals(Right, other.Right)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (left_ != null) hash ^= Left.GetHashCode();
          if (BOOLOP.Length != 0) hash ^= BOOLOP.GetHashCode();
          if (right_ != null) hash ^= Right.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (left_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Left);
          }
          if (BOOLOP.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(BOOLOP);
          }
          if (right_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Right);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (left_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
          }
          if (BOOLOP.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BOOLOP);
          }
          if (right_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CompareCompound other) {
          if (other == null) {
            return;
          }
          if (other.left_ != null) {
            if (left_ == null) {
              Left = new global::Ahghee.Grpc.FilterOperator.Types.Compare();
            }
            Left.MergeFrom(other.Left);
          }
          if (other.BOOLOP.Length != 0) {
            BOOLOP = other.BOOLOP;
          }
          if (other.right_ != null) {
            if (right_ == null) {
              Right = new global::Ahghee.Grpc.FilterOperator.Types.Compare();
            }
            Right.MergeFrom(other.Right);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (left_ == null) {
                  Left = new global::Ahghee.Grpc.FilterOperator.Types.Compare();
                }
                input.ReadMessage(Left);
                break;
              }
              case 18: {
                BOOLOP = input.ReadString();
                break;
              }
              case 26: {
                if (right_ == null) {
                  Right = new global::Ahghee.Grpc.FilterOperator.Types.Compare();
                }
                input.ReadMessage(Right);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class LimitFilter : pb::IMessage<LimitFilter> {
    private static readonly pb::MessageParser<LimitFilter> _parser = new pb::MessageParser<LimitFilter>(() => new LimitFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LimitFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LimitFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LimitFilter(LimitFilter other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LimitFilter Clone() {
      return new LimitFilter(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LimitFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LimitFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LimitFilter other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SkipFilter : pb::IMessage<SkipFilter> {
    private static readonly pb::MessageParser<SkipFilter> _parser = new pb::MessageParser<SkipFilter>(() => new SkipFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SkipFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkipFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkipFilter(SkipFilter other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SkipFilter Clone() {
      return new SkipFilter(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SkipFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SkipFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SkipFilter other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FieldsOperator : pb::IMessage<FieldsOperator> {
    private static readonly pb::MessageParser<FieldsOperator> _parser = new pb::MessageParser<FieldsOperator>(() => new FieldsOperator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldsOperator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldsOperator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldsOperator(FieldsOperator other) : this() {
      clude_ = other.clude_ != null ? other.clude_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldsOperator Clone() {
      return new FieldsOperator(this);
    }

    /// <summary>Field number for the "clude" field.</summary>
    public const int CludeFieldNumber = 1;
    private global::Ahghee.Grpc.FieldsOperator.Types.Clude clude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FieldsOperator.Types.Clude Clude {
      get { return clude_; }
      set {
        clude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldsOperator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldsOperator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Clude, other.Clude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clude_ != null) hash ^= Clude.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (clude_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Clude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clude_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clude);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldsOperator other) {
      if (other == null) {
        return;
      }
      if (other.clude_ != null) {
        if (clude_ == null) {
          Clude = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
        }
        Clude.MergeFrom(other.Clude);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clude_ == null) {
              Clude = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
            }
            input.ReadMessage(Clude);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FieldsOperator message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TwoClude : pb::IMessage<TwoClude> {
        private static readonly pb::MessageParser<TwoClude> _parser = new pb::MessageParser<TwoClude>(() => new TwoClude());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TwoClude> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FieldsOperator.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TwoClude() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TwoClude(TwoClude other) : this() {
          left_ = other.left_ != null ? other.left_.Clone() : null;
          switch (other.RightCase) {
            case RightOneofCase.Include:
              Include = other.Include.Clone();
              break;
            case RightOneofCase.Exclude:
              Exclude = other.Exclude.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TwoClude Clone() {
          return new TwoClude(this);
        }

        /// <summary>Field number for the "left" field.</summary>
        public const int LeftFieldNumber = 1;
        private global::Ahghee.Grpc.FieldsOperator.Types.Clude left_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.Clude Left {
          get { return left_; }
          set {
            left_ = value;
          }
        }

        /// <summary>Field number for the "include" field.</summary>
        public const int IncludeFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.Clude Include {
          get { return rightCase_ == RightOneofCase.Include ? (global::Ahghee.Grpc.FieldsOperator.Types.Clude) right_ : null; }
          set {
            right_ = value;
            rightCase_ = value == null ? RightOneofCase.None : RightOneofCase.Include;
          }
        }

        /// <summary>Field number for the "exclude" field.</summary>
        public const int ExcludeFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.Clude Exclude {
          get { return rightCase_ == RightOneofCase.Exclude ? (global::Ahghee.Grpc.FieldsOperator.Types.Clude) right_ : null; }
          set {
            right_ = value;
            rightCase_ = value == null ? RightOneofCase.None : RightOneofCase.Exclude;
          }
        }

        private object right_;
        /// <summary>Enum of possible cases for the "right" oneof.</summary>
        public enum RightOneofCase {
          None = 0,
          Include = 2,
          Exclude = 3,
        }
        private RightOneofCase rightCase_ = RightOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RightOneofCase RightCase {
          get { return rightCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRight() {
          rightCase_ = RightOneofCase.None;
          right_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TwoClude);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TwoClude other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Left, other.Left)) return false;
          if (!object.Equals(Include, other.Include)) return false;
          if (!object.Equals(Exclude, other.Exclude)) return false;
          if (RightCase != other.RightCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (left_ != null) hash ^= Left.GetHashCode();
          if (rightCase_ == RightOneofCase.Include) hash ^= Include.GetHashCode();
          if (rightCase_ == RightOneofCase.Exclude) hash ^= Exclude.GetHashCode();
          hash ^= (int) rightCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (left_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Left);
          }
          if (rightCase_ == RightOneofCase.Include) {
            output.WriteRawTag(18);
            output.WriteMessage(Include);
          }
          if (rightCase_ == RightOneofCase.Exclude) {
            output.WriteRawTag(26);
            output.WriteMessage(Exclude);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (left_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
          }
          if (rightCase_ == RightOneofCase.Include) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Include);
          }
          if (rightCase_ == RightOneofCase.Exclude) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exclude);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TwoClude other) {
          if (other == null) {
            return;
          }
          if (other.left_ != null) {
            if (left_ == null) {
              Left = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
            }
            Left.MergeFrom(other.Left);
          }
          switch (other.RightCase) {
            case RightOneofCase.Include:
              if (Include == null) {
                Include = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
              }
              Include.MergeFrom(other.Include);
              break;
            case RightOneofCase.Exclude:
              if (Exclude == null) {
                Exclude = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
              }
              Exclude.MergeFrom(other.Exclude);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (left_ == null) {
                  Left = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
                }
                input.ReadMessage(Left);
                break;
              }
              case 18: {
                global::Ahghee.Grpc.FieldsOperator.Types.Clude subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
                if (rightCase_ == RightOneofCase.Include) {
                  subBuilder.MergeFrom(Include);
                }
                input.ReadMessage(subBuilder);
                Include = subBuilder;
                break;
              }
              case 26: {
                global::Ahghee.Grpc.FieldsOperator.Types.Clude subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
                if (rightCase_ == RightOneofCase.Exclude) {
                  subBuilder.MergeFrom(Exclude);
                }
                input.ReadMessage(subBuilder);
                Exclude = subBuilder;
                break;
              }
            }
          }
        }

      }

      public sealed partial class CludeList : pb::IMessage<CludeList> {
        private static readonly pb::MessageParser<CludeList> _parser = new pb::MessageParser<CludeList>(() => new CludeList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CludeList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FieldsOperator.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CludeList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CludeList(CludeList other) : this() {
          cludes_ = other.cludes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CludeList Clone() {
          return new CludeList(this);
        }

        /// <summary>Field number for the "cludes" field.</summary>
        public const int CludesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Ahghee.Grpc.FieldsOperator.Types.Clude> _repeated_cludes_codec
            = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.FieldsOperator.Types.Clude.Parser);
        private readonly pbc::RepeatedField<global::Ahghee.Grpc.FieldsOperator.Types.Clude> cludes_ = new pbc::RepeatedField<global::Ahghee.Grpc.FieldsOperator.Types.Clude>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Ahghee.Grpc.FieldsOperator.Types.Clude> Cludes {
          get { return cludes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CludeList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CludeList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!cludes_.Equals(other.cludes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= cludes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          cludes_.WriteTo(output, _repeated_cludes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += cludes_.CalculateSize(_repeated_cludes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CludeList other) {
          if (other == null) {
            return;
          }
          cludes_.Add(other.cludes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                cludes_.AddEntriesFrom(input, _repeated_cludes_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class CludeOp : pb::IMessage<CludeOp> {
        private static readonly pb::MessageParser<CludeOp> _parser = new pb::MessageParser<CludeOp>(() => new CludeOp());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CludeOp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FieldsOperator.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CludeOp() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CludeOp(CludeOp other) : this() {
          left_ = other.left_ != null ? other.left_.Clone() : null;
          right_ = other.right_ != null ? other.right_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CludeOp Clone() {
          return new CludeOp(this);
        }

        /// <summary>Field number for the "left" field.</summary>
        public const int LeftFieldNumber = 1;
        private global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart left_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart Left {
          get { return left_; }
          set {
            left_ = value;
          }
        }

        /// <summary>Field number for the "right" field.</summary>
        public const int RightFieldNumber = 2;
        private global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart right_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart Right {
          get { return right_; }
          set {
            right_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CludeOp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CludeOp other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Left, other.Left)) return false;
          if (!object.Equals(Right, other.Right)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (left_ != null) hash ^= Left.GetHashCode();
          if (right_ != null) hash ^= Right.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (left_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Left);
          }
          if (right_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Right);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (left_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
          }
          if (right_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CludeOp other) {
          if (other == null) {
            return;
          }
          if (other.left_ != null) {
            if (left_ == null) {
              Left = new global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart();
            }
            Left.MergeFrom(other.Left);
          }
          if (other.right_ != null) {
            if (right_ == null) {
              Right = new global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart();
            }
            Right.MergeFrom(other.Right);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (left_ == null) {
                  Left = new global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart();
                }
                input.ReadMessage(Left);
                break;
              }
              case 18: {
                if (right_ == null) {
                  Right = new global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Types.CludePart();
                }
                input.ReadMessage(Right);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the CludeOp message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class CludePart : pb::IMessage<CludePart> {
            private static readonly pb::MessageParser<CludePart> _parser = new pb::MessageParser<CludePart>(() => new CludePart());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CludePart> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Ahghee.Grpc.FieldsOperator.Types.CludeOp.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CludePart() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CludePart(CludePart other) : this() {
              switch (other.PartCase) {
                case PartOneofCase.CarrotStringMatch:
                  CarrotStringMatch = other.CarrotStringMatch;
                  break;
                case PartOneofCase.StringMatch:
                  StringMatch = other.StringMatch;
                  break;
                case PartOneofCase.IsCaret:
                  IsCaret = other.IsCaret;
                  break;
                case PartOneofCase.IsStar:
                  IsStar = other.IsStar;
                  break;
                case PartOneofCase.IsTypeString:
                  IsTypeString = other.IsTypeString;
                  break;
                case PartOneofCase.IsTypeInt:
                  IsTypeInt = other.IsTypeInt;
                  break;
                case PartOneofCase.IsTypeFloat:
                  IsTypeFloat = other.IsTypeFloat;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CludePart Clone() {
              return new CludePart(this);
            }

            /// <summary>Field number for the "carrotStringMatch" field.</summary>
            public const int CarrotStringMatchFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string CarrotStringMatch {
              get { return partCase_ == PartOneofCase.CarrotStringMatch ? (string) part_ : ""; }
              set {
                part_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                partCase_ = PartOneofCase.CarrotStringMatch;
              }
            }

            /// <summary>Field number for the "stringMatch" field.</summary>
            public const int StringMatchFieldNumber = 3;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string StringMatch {
              get { return partCase_ == PartOneofCase.StringMatch ? (string) part_ : ""; }
              set {
                part_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                partCase_ = PartOneofCase.StringMatch;
              }
            }

            /// <summary>Field number for the "isCaret" field.</summary>
            public const int IsCaretFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsCaret {
              get { return partCase_ == PartOneofCase.IsCaret ? (bool) part_ : false; }
              set {
                part_ = value;
                partCase_ = PartOneofCase.IsCaret;
              }
            }

            /// <summary>Field number for the "isStar" field.</summary>
            public const int IsStarFieldNumber = 4;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsStar {
              get { return partCase_ == PartOneofCase.IsStar ? (bool) part_ : false; }
              set {
                part_ = value;
                partCase_ = PartOneofCase.IsStar;
              }
            }

            /// <summary>Field number for the "isTypeString" field.</summary>
            public const int IsTypeStringFieldNumber = 5;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsTypeString {
              get { return partCase_ == PartOneofCase.IsTypeString ? (bool) part_ : false; }
              set {
                part_ = value;
                partCase_ = PartOneofCase.IsTypeString;
              }
            }

            /// <summary>Field number for the "isTypeInt" field.</summary>
            public const int IsTypeIntFieldNumber = 6;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsTypeInt {
              get { return partCase_ == PartOneofCase.IsTypeInt ? (bool) part_ : false; }
              set {
                part_ = value;
                partCase_ = PartOneofCase.IsTypeInt;
              }
            }

            /// <summary>Field number for the "isTypeFloat" field.</summary>
            public const int IsTypeFloatFieldNumber = 7;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool IsTypeFloat {
              get { return partCase_ == PartOneofCase.IsTypeFloat ? (bool) part_ : false; }
              set {
                part_ = value;
                partCase_ = PartOneofCase.IsTypeFloat;
              }
            }

            private object part_;
            /// <summary>Enum of possible cases for the "part" oneof.</summary>
            public enum PartOneofCase {
              None = 0,
              CarrotStringMatch = 1,
              StringMatch = 3,
              IsCaret = 2,
              IsStar = 4,
              IsTypeString = 5,
              IsTypeInt = 6,
              IsTypeFloat = 7,
            }
            private PartOneofCase partCase_ = PartOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PartOneofCase PartCase {
              get { return partCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearPart() {
              partCase_ = PartOneofCase.None;
              part_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CludePart);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CludePart other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (CarrotStringMatch != other.CarrotStringMatch) return false;
              if (StringMatch != other.StringMatch) return false;
              if (IsCaret != other.IsCaret) return false;
              if (IsStar != other.IsStar) return false;
              if (IsTypeString != other.IsTypeString) return false;
              if (IsTypeInt != other.IsTypeInt) return false;
              if (IsTypeFloat != other.IsTypeFloat) return false;
              if (PartCase != other.PartCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (partCase_ == PartOneofCase.CarrotStringMatch) hash ^= CarrotStringMatch.GetHashCode();
              if (partCase_ == PartOneofCase.StringMatch) hash ^= StringMatch.GetHashCode();
              if (partCase_ == PartOneofCase.IsCaret) hash ^= IsCaret.GetHashCode();
              if (partCase_ == PartOneofCase.IsStar) hash ^= IsStar.GetHashCode();
              if (partCase_ == PartOneofCase.IsTypeString) hash ^= IsTypeString.GetHashCode();
              if (partCase_ == PartOneofCase.IsTypeInt) hash ^= IsTypeInt.GetHashCode();
              if (partCase_ == PartOneofCase.IsTypeFloat) hash ^= IsTypeFloat.GetHashCode();
              hash ^= (int) partCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (partCase_ == PartOneofCase.CarrotStringMatch) {
                output.WriteRawTag(10);
                output.WriteString(CarrotStringMatch);
              }
              if (partCase_ == PartOneofCase.IsCaret) {
                output.WriteRawTag(16);
                output.WriteBool(IsCaret);
              }
              if (partCase_ == PartOneofCase.StringMatch) {
                output.WriteRawTag(26);
                output.WriteString(StringMatch);
              }
              if (partCase_ == PartOneofCase.IsStar) {
                output.WriteRawTag(32);
                output.WriteBool(IsStar);
              }
              if (partCase_ == PartOneofCase.IsTypeString) {
                output.WriteRawTag(40);
                output.WriteBool(IsTypeString);
              }
              if (partCase_ == PartOneofCase.IsTypeInt) {
                output.WriteRawTag(48);
                output.WriteBool(IsTypeInt);
              }
              if (partCase_ == PartOneofCase.IsTypeFloat) {
                output.WriteRawTag(56);
                output.WriteBool(IsTypeFloat);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (partCase_ == PartOneofCase.CarrotStringMatch) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrotStringMatch);
              }
              if (partCase_ == PartOneofCase.StringMatch) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(StringMatch);
              }
              if (partCase_ == PartOneofCase.IsCaret) {
                size += 1 + 1;
              }
              if (partCase_ == PartOneofCase.IsStar) {
                size += 1 + 1;
              }
              if (partCase_ == PartOneofCase.IsTypeString) {
                size += 1 + 1;
              }
              if (partCase_ == PartOneofCase.IsTypeInt) {
                size += 1 + 1;
              }
              if (partCase_ == PartOneofCase.IsTypeFloat) {
                size += 1 + 1;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CludePart other) {
              if (other == null) {
                return;
              }
              switch (other.PartCase) {
                case PartOneofCase.CarrotStringMatch:
                  CarrotStringMatch = other.CarrotStringMatch;
                  break;
                case PartOneofCase.StringMatch:
                  StringMatch = other.StringMatch;
                  break;
                case PartOneofCase.IsCaret:
                  IsCaret = other.IsCaret;
                  break;
                case PartOneofCase.IsStar:
                  IsStar = other.IsStar;
                  break;
                case PartOneofCase.IsTypeString:
                  IsTypeString = other.IsTypeString;
                  break;
                case PartOneofCase.IsTypeInt:
                  IsTypeInt = other.IsTypeInt;
                  break;
                case PartOneofCase.IsTypeFloat:
                  IsTypeFloat = other.IsTypeFloat;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    CarrotStringMatch = input.ReadString();
                    break;
                  }
                  case 16: {
                    IsCaret = input.ReadBool();
                    break;
                  }
                  case 26: {
                    StringMatch = input.ReadString();
                    break;
                  }
                  case 32: {
                    IsStar = input.ReadBool();
                    break;
                  }
                  case 40: {
                    IsTypeString = input.ReadBool();
                    break;
                  }
                  case 48: {
                    IsTypeInt = input.ReadBool();
                    break;
                  }
                  case 56: {
                    IsTypeFloat = input.ReadBool();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class Clude : pb::IMessage<Clude> {
        private static readonly pb::MessageParser<Clude> _parser = new pb::MessageParser<Clude>(() => new Clude());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Clude> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.FieldsOperator.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Clude() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Clude(Clude other) : this() {
          switch (other.OperatorCase) {
            case OperatorOneofCase.List:
              List = other.List.Clone();
              break;
            case OperatorOneofCase.Include:
              Include = other.Include.Clone();
              break;
            case OperatorOneofCase.Exclude:
              Exclude = other.Exclude.Clone();
              break;
            case OperatorOneofCase.Twoclude:
              Twoclude = other.Twoclude.Clone();
              break;
            case OperatorOneofCase.Op:
              Op = other.Op.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Clude Clone() {
          return new Clude(this);
        }

        /// <summary>Field number for the "list" field.</summary>
        public const int ListFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.CludeList List {
          get { return operatorCase_ == OperatorOneofCase.List ? (global::Ahghee.Grpc.FieldsOperator.Types.CludeList) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.List;
          }
        }

        /// <summary>Field number for the "include" field.</summary>
        public const int IncludeFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.Clude Include {
          get { return operatorCase_ == OperatorOneofCase.Include ? (global::Ahghee.Grpc.FieldsOperator.Types.Clude) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Include;
          }
        }

        /// <summary>Field number for the "exclude" field.</summary>
        public const int ExcludeFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.Clude Exclude {
          get { return operatorCase_ == OperatorOneofCase.Exclude ? (global::Ahghee.Grpc.FieldsOperator.Types.Clude) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Exclude;
          }
        }

        /// <summary>Field number for the "twoclude" field.</summary>
        public const int TwocludeFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.TwoClude Twoclude {
          get { return operatorCase_ == OperatorOneofCase.Twoclude ? (global::Ahghee.Grpc.FieldsOperator.Types.TwoClude) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Twoclude;
          }
        }

        /// <summary>Field number for the "op" field.</summary>
        public const int OpFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Ahghee.Grpc.FieldsOperator.Types.CludeOp Op {
          get { return operatorCase_ == OperatorOneofCase.Op ? (global::Ahghee.Grpc.FieldsOperator.Types.CludeOp) operator_ : null; }
          set {
            operator_ = value;
            operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Op;
          }
        }

        private object operator_;
        /// <summary>Enum of possible cases for the "Operator" oneof.</summary>
        public enum OperatorOneofCase {
          None = 0,
          List = 1,
          Include = 2,
          Exclude = 3,
          Twoclude = 4,
          Op = 5,
        }
        private OperatorOneofCase operatorCase_ = OperatorOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OperatorOneofCase OperatorCase {
          get { return operatorCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearOperator() {
          operatorCase_ = OperatorOneofCase.None;
          operator_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Clude);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Clude other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(List, other.List)) return false;
          if (!object.Equals(Include, other.Include)) return false;
          if (!object.Equals(Exclude, other.Exclude)) return false;
          if (!object.Equals(Twoclude, other.Twoclude)) return false;
          if (!object.Equals(Op, other.Op)) return false;
          if (OperatorCase != other.OperatorCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (operatorCase_ == OperatorOneofCase.List) hash ^= List.GetHashCode();
          if (operatorCase_ == OperatorOneofCase.Include) hash ^= Include.GetHashCode();
          if (operatorCase_ == OperatorOneofCase.Exclude) hash ^= Exclude.GetHashCode();
          if (operatorCase_ == OperatorOneofCase.Twoclude) hash ^= Twoclude.GetHashCode();
          if (operatorCase_ == OperatorOneofCase.Op) hash ^= Op.GetHashCode();
          hash ^= (int) operatorCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (operatorCase_ == OperatorOneofCase.List) {
            output.WriteRawTag(10);
            output.WriteMessage(List);
          }
          if (operatorCase_ == OperatorOneofCase.Include) {
            output.WriteRawTag(18);
            output.WriteMessage(Include);
          }
          if (operatorCase_ == OperatorOneofCase.Exclude) {
            output.WriteRawTag(26);
            output.WriteMessage(Exclude);
          }
          if (operatorCase_ == OperatorOneofCase.Twoclude) {
            output.WriteRawTag(34);
            output.WriteMessage(Twoclude);
          }
          if (operatorCase_ == OperatorOneofCase.Op) {
            output.WriteRawTag(42);
            output.WriteMessage(Op);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (operatorCase_ == OperatorOneofCase.List) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
          }
          if (operatorCase_ == OperatorOneofCase.Include) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Include);
          }
          if (operatorCase_ == OperatorOneofCase.Exclude) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exclude);
          }
          if (operatorCase_ == OperatorOneofCase.Twoclude) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Twoclude);
          }
          if (operatorCase_ == OperatorOneofCase.Op) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Op);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Clude other) {
          if (other == null) {
            return;
          }
          switch (other.OperatorCase) {
            case OperatorOneofCase.List:
              if (List == null) {
                List = new global::Ahghee.Grpc.FieldsOperator.Types.CludeList();
              }
              List.MergeFrom(other.List);
              break;
            case OperatorOneofCase.Include:
              if (Include == null) {
                Include = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
              }
              Include.MergeFrom(other.Include);
              break;
            case OperatorOneofCase.Exclude:
              if (Exclude == null) {
                Exclude = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
              }
              Exclude.MergeFrom(other.Exclude);
              break;
            case OperatorOneofCase.Twoclude:
              if (Twoclude == null) {
                Twoclude = new global::Ahghee.Grpc.FieldsOperator.Types.TwoClude();
              }
              Twoclude.MergeFrom(other.Twoclude);
              break;
            case OperatorOneofCase.Op:
              if (Op == null) {
                Op = new global::Ahghee.Grpc.FieldsOperator.Types.CludeOp();
              }
              Op.MergeFrom(other.Op);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Ahghee.Grpc.FieldsOperator.Types.CludeList subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.CludeList();
                if (operatorCase_ == OperatorOneofCase.List) {
                  subBuilder.MergeFrom(List);
                }
                input.ReadMessage(subBuilder);
                List = subBuilder;
                break;
              }
              case 18: {
                global::Ahghee.Grpc.FieldsOperator.Types.Clude subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
                if (operatorCase_ == OperatorOneofCase.Include) {
                  subBuilder.MergeFrom(Include);
                }
                input.ReadMessage(subBuilder);
                Include = subBuilder;
                break;
              }
              case 26: {
                global::Ahghee.Grpc.FieldsOperator.Types.Clude subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.Clude();
                if (operatorCase_ == OperatorOneofCase.Exclude) {
                  subBuilder.MergeFrom(Exclude);
                }
                input.ReadMessage(subBuilder);
                Exclude = subBuilder;
                break;
              }
              case 34: {
                global::Ahghee.Grpc.FieldsOperator.Types.TwoClude subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.TwoClude();
                if (operatorCase_ == OperatorOneofCase.Twoclude) {
                  subBuilder.MergeFrom(Twoclude);
                }
                input.ReadMessage(subBuilder);
                Twoclude = subBuilder;
                break;
              }
              case 42: {
                global::Ahghee.Grpc.FieldsOperator.Types.CludeOp subBuilder = new global::Ahghee.Grpc.FieldsOperator.Types.CludeOp();
                if (operatorCase_ == OperatorOneofCase.Op) {
                  subBuilder.MergeFrom(Op);
                }
                input.ReadMessage(subBuilder);
                Op = subBuilder;
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Step : pb::IMessage<Step> {
    private static readonly pb::MessageParser<Step> _parser = new pb::MessageParser<Step>(() => new Step());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Step> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Step() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Step(Step other) : this() {
      next_ = other.next_ != null ? other.next_.Clone() : null;
      switch (other.OperatorCase) {
        case OperatorOneofCase.Follow:
          Follow = other.Follow.Clone();
          break;
        case OperatorOneofCase.Filter:
          Filter = other.Filter.Clone();
          break;
        case OperatorOneofCase.Limit:
          Limit = other.Limit.Clone();
          break;
        case OperatorOneofCase.Skip:
          Skip = other.Skip.Clone();
          break;
        case OperatorOneofCase.Fields:
          Fields = other.Fields.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Step Clone() {
      return new Step(this);
    }

    /// <summary>Field number for the "follow" field.</summary>
    public const int FollowFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FollowOperator Follow {
      get { return operatorCase_ == OperatorOneofCase.Follow ? (global::Ahghee.Grpc.FollowOperator) operator_ : null; }
      set {
        operator_ = value;
        operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Follow;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FilterOperator Filter {
      get { return operatorCase_ == OperatorOneofCase.Filter ? (global::Ahghee.Grpc.FilterOperator) operator_ : null; }
      set {
        operator_ = value;
        operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Filter;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.LimitFilter Limit {
      get { return operatorCase_ == OperatorOneofCase.Limit ? (global::Ahghee.Grpc.LimitFilter) operator_ : null; }
      set {
        operator_ = value;
        operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Limit;
      }
    }

    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.SkipFilter Skip {
      get { return operatorCase_ == OperatorOneofCase.Skip ? (global::Ahghee.Grpc.SkipFilter) operator_ : null; }
      set {
        operator_ = value;
        operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Skip;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.FieldsOperator Fields {
      get { return operatorCase_ == OperatorOneofCase.Fields ? (global::Ahghee.Grpc.FieldsOperator) operator_ : null; }
      set {
        operator_ = value;
        operatorCase_ = value == null ? OperatorOneofCase.None : OperatorOneofCase.Fields;
      }
    }

    /// <summary>Field number for the "next" field.</summary>
    public const int NextFieldNumber = 3;
    private global::Ahghee.Grpc.Step next_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.Step Next {
      get { return next_; }
      set {
        next_ = value;
      }
    }

    private object operator_;
    /// <summary>Enum of possible cases for the "operator" oneof.</summary>
    public enum OperatorOneofCase {
      None = 0,
      Follow = 1,
      Filter = 2,
      Limit = 4,
      Skip = 5,
      Fields = 6,
    }
    private OperatorOneofCase operatorCase_ = OperatorOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperatorOneofCase OperatorCase {
      get { return operatorCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOperator() {
      operatorCase_ = OperatorOneofCase.None;
      operator_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Step);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Step other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Follow, other.Follow)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (!object.Equals(Limit, other.Limit)) return false;
      if (!object.Equals(Skip, other.Skip)) return false;
      if (!object.Equals(Fields, other.Fields)) return false;
      if (!object.Equals(Next, other.Next)) return false;
      if (OperatorCase != other.OperatorCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (operatorCase_ == OperatorOneofCase.Follow) hash ^= Follow.GetHashCode();
      if (operatorCase_ == OperatorOneofCase.Filter) hash ^= Filter.GetHashCode();
      if (operatorCase_ == OperatorOneofCase.Limit) hash ^= Limit.GetHashCode();
      if (operatorCase_ == OperatorOneofCase.Skip) hash ^= Skip.GetHashCode();
      if (operatorCase_ == OperatorOneofCase.Fields) hash ^= Fields.GetHashCode();
      if (next_ != null) hash ^= Next.GetHashCode();
      hash ^= (int) operatorCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (operatorCase_ == OperatorOneofCase.Follow) {
        output.WriteRawTag(10);
        output.WriteMessage(Follow);
      }
      if (operatorCase_ == OperatorOneofCase.Filter) {
        output.WriteRawTag(18);
        output.WriteMessage(Filter);
      }
      if (next_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Next);
      }
      if (operatorCase_ == OperatorOneofCase.Limit) {
        output.WriteRawTag(34);
        output.WriteMessage(Limit);
      }
      if (operatorCase_ == OperatorOneofCase.Skip) {
        output.WriteRawTag(42);
        output.WriteMessage(Skip);
      }
      if (operatorCase_ == OperatorOneofCase.Fields) {
        output.WriteRawTag(50);
        output.WriteMessage(Fields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (operatorCase_ == OperatorOneofCase.Follow) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Follow);
      }
      if (operatorCase_ == OperatorOneofCase.Filter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (operatorCase_ == OperatorOneofCase.Limit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Limit);
      }
      if (operatorCase_ == OperatorOneofCase.Skip) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Skip);
      }
      if (operatorCase_ == OperatorOneofCase.Fields) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fields);
      }
      if (next_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Next);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Step other) {
      if (other == null) {
        return;
      }
      if (other.next_ != null) {
        if (next_ == null) {
          Next = new global::Ahghee.Grpc.Step();
        }
        Next.MergeFrom(other.Next);
      }
      switch (other.OperatorCase) {
        case OperatorOneofCase.Follow:
          if (Follow == null) {
            Follow = new global::Ahghee.Grpc.FollowOperator();
          }
          Follow.MergeFrom(other.Follow);
          break;
        case OperatorOneofCase.Filter:
          if (Filter == null) {
            Filter = new global::Ahghee.Grpc.FilterOperator();
          }
          Filter.MergeFrom(other.Filter);
          break;
        case OperatorOneofCase.Limit:
          if (Limit == null) {
            Limit = new global::Ahghee.Grpc.LimitFilter();
          }
          Limit.MergeFrom(other.Limit);
          break;
        case OperatorOneofCase.Skip:
          if (Skip == null) {
            Skip = new global::Ahghee.Grpc.SkipFilter();
          }
          Skip.MergeFrom(other.Skip);
          break;
        case OperatorOneofCase.Fields:
          if (Fields == null) {
            Fields = new global::Ahghee.Grpc.FieldsOperator();
          }
          Fields.MergeFrom(other.Fields);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Ahghee.Grpc.FollowOperator subBuilder = new global::Ahghee.Grpc.FollowOperator();
            if (operatorCase_ == OperatorOneofCase.Follow) {
              subBuilder.MergeFrom(Follow);
            }
            input.ReadMessage(subBuilder);
            Follow = subBuilder;
            break;
          }
          case 18: {
            global::Ahghee.Grpc.FilterOperator subBuilder = new global::Ahghee.Grpc.FilterOperator();
            if (operatorCase_ == OperatorOneofCase.Filter) {
              subBuilder.MergeFrom(Filter);
            }
            input.ReadMessage(subBuilder);
            Filter = subBuilder;
            break;
          }
          case 26: {
            if (next_ == null) {
              Next = new global::Ahghee.Grpc.Step();
            }
            input.ReadMessage(Next);
            break;
          }
          case 34: {
            global::Ahghee.Grpc.LimitFilter subBuilder = new global::Ahghee.Grpc.LimitFilter();
            if (operatorCase_ == OperatorOneofCase.Limit) {
              subBuilder.MergeFrom(Limit);
            }
            input.ReadMessage(subBuilder);
            Limit = subBuilder;
            break;
          }
          case 42: {
            global::Ahghee.Grpc.SkipFilter subBuilder = new global::Ahghee.Grpc.SkipFilter();
            if (operatorCase_ == OperatorOneofCase.Skip) {
              subBuilder.MergeFrom(Skip);
            }
            input.ReadMessage(subBuilder);
            Skip = subBuilder;
            break;
          }
          case 50: {
            global::Ahghee.Grpc.FieldsOperator subBuilder = new global::Ahghee.Grpc.FieldsOperator();
            if (operatorCase_ == OperatorOneofCase.Fields) {
              subBuilder.MergeFrom(Fields);
            }
            input.ReadMessage(subBuilder);
            Fields = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      step_ = other.step_ != null ? other.step_.Clone() : null;
      iris_ = other.iris_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 1;
    private global::Ahghee.Grpc.Step step_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ahghee.Grpc.Step Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "iris" field.</summary>
    public const int IrisFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_iris_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> iris_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Iris {
      get { return iris_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Step, other.Step)) return false;
      if(!iris_.Equals(other.iris_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (step_ != null) hash ^= Step.GetHashCode();
      hash ^= iris_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (step_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Step);
      }
      iris_.WriteTo(output, _repeated_iris_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (step_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Step);
      }
      size += iris_.CalculateSize(_repeated_iris_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.step_ != null) {
        if (step_ == null) {
          Step = new global::Ahghee.Grpc.Step();
        }
        Step.MergeFrom(other.Step);
      }
      iris_.Add(other.iris_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (step_ == null) {
              Step = new global::Ahghee.Grpc.Step();
            }
            input.ReadMessage(Step);
            break;
          }
          case 18: {
            iris_.AddEntriesFrom(input, _repeated_iris_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutResponse : pb::IMessage<PutResponse> {
    private static readonly pb::MessageParser<PutResponse> _parser = new pb::MessageParser<PutResponse>(() => new PutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse(PutResponse other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse Clone() {
      return new PutResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMetricsResponse : pb::IMessage<GetMetricsResponse> {
    private static readonly pb::MessageParser<GetMetricsResponse> _parser = new pb::MessageParser<GetMetricsResponse>(() => new GetMetricsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMetricsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetricsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetricsResponse(GetMetricsResponse other) : this() {
      metrics_ = other.metrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetricsResponse Clone() {
      return new GetMetricsResponse(this);
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.GetMetricsResponse.Types.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.GetMetricsResponse.Types.Metric.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.GetMetricsResponse.Types.Metric> metrics_ = new pbc::RepeatedField<global::Ahghee.Grpc.GetMetricsResponse.Types.Metric>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.GetMetricsResponse.Types.Metric> Metrics {
      get { return metrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMetricsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMetricsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!metrics_.Equals(other.metrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= metrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      metrics_.WriteTo(output, _repeated_metrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMetricsResponse other) {
      if (other == null) {
        return;
      }
      metrics_.Add(other.metrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetMetricsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Metric : pb::IMessage<Metric> {
        private static readonly pb::MessageParser<Metric> _parser = new pb::MessageParser<Metric>(() => new Metric());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Metric> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.GetMetricsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Metric() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Metric(Metric other) : this() {
          value_ = other.value_;
          name_ = other.name_;
          time_ = other.time_ != null ? other.time_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Metric Clone() {
          return new Metric(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private float value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "time" field.</summary>
        public const int TimeFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
          get { return time_; }
          set {
            time_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Metric);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Metric other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
          if (Name != other.Name) return false;
          if (!object.Equals(Time, other.Time)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (time_ != null) hash ^= Time.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Value != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Value);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (time_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Time);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value != 0F) {
            size += 1 + 4;
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (time_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Metric other) {
          if (other == null) {
            return;
          }
          if (other.Value != 0F) {
            Value = other.Value;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.time_ != null) {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            Time.MergeFrom(other.Time);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Value = input.ReadFloat();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                if (time_ == null) {
                  Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Time);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetMetricsRequest : pb::IMessage<GetMetricsRequest> {
    private static readonly pb::MessageParser<GetMetricsRequest> _parser = new pb::MessageParser<GetMetricsRequest>(() => new GetMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetricsRequest(GetMetricsRequest other) : this() {
      names_ = other.names_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMetricsRequest Clone() {
      return new GetMetricsRequest(this);
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!names_.Equals(other.names_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= names_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      names_.WriteTo(output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += names_.CalculateSize(_repeated_names_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMetricsRequest other) {
      if (other == null) {
        return;
      }
      names_.Add(other.names_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStatsRequest : pb::IMessage<GetStatsRequest> {
    private static readonly pb::MessageParser<GetStatsRequest> _parser = new pb::MessageParser<GetStatsRequest>(() => new GetStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatsRequest(GetStatsRequest other) : this() {
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatsRequest Clone() {
      return new GetStatsRequest(this);
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.GetStatsRequest.Types.Stat> _repeated_stats_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.GetStatsRequest.Types.Stat.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.GetStatsRequest.Types.Stat> stats_ = new pbc::RepeatedField<global::Ahghee.Grpc.GetStatsRequest.Types.Stat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.GetStatsRequest.Types.Stat> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stats_.Equals(other.stats_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stats_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stats_.WriteTo(output, _repeated_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stats_.CalculateSize(_repeated_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStatsRequest other) {
      if (other == null) {
        return;
      }
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stats_.AddEntriesFrom(input, _repeated_stats_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetStatsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Stat : pb::IMessage<Stat> {
        private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Stat> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ahghee.Grpc.GetStatsRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stat() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stat(Stat other) : this() {
          value_ = other.value_;
          topic_ = other.topic_;
          stat_ = other.stat_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Stat Clone() {
          return new Stat(this);
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 1;
        private float value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "topic" field.</summary>
        public const int TopicFieldNumber = 2;
        private string topic_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Topic {
          get { return topic_; }
          set {
            topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "stat" field.</summary>
        public const int Stat_FieldNumber = 3;
        private string stat_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Stat_ {
          get { return stat_; }
          set {
            stat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Stat);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Stat other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
          if (Topic != other.Topic) return false;
          if (Stat_ != other.Stat_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
          if (Topic.Length != 0) hash ^= Topic.GetHashCode();
          if (Stat_.Length != 0) hash ^= Stat_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Value != 0F) {
            output.WriteRawTag(13);
            output.WriteFloat(Value);
          }
          if (Topic.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Topic);
          }
          if (Stat_.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Stat_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Value != 0F) {
            size += 1 + 4;
          }
          if (Topic.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
          }
          if (Stat_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Stat_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Stat other) {
          if (other == null) {
            return;
          }
          if (other.Value != 0F) {
            Value = other.Value;
          }
          if (other.Topic.Length != 0) {
            Topic = other.Topic;
          }
          if (other.Stat_.Length != 0) {
            Stat_ = other.Stat_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 13: {
                Value = input.ReadFloat();
                break;
              }
              case 18: {
                Topic = input.ReadString();
                break;
              }
              case 26: {
                Stat_ = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetStatsResponse : pb::IMessage<GetStatsResponse> {
    private static readonly pb::MessageParser<GetStatsResponse> _parser = new pb::MessageParser<GetStatsResponse>(() => new GetStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatsResponse(GetStatsResponse other) : this() {
      names_ = other.names_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatsResponse Clone() {
      return new GetStatsResponse(this);
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!names_.Equals(other.names_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= names_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      names_.WriteTo(output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += names_.CalculateSize(_repeated_names_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStatsResponse other) {
      if (other == null) {
        return;
      }
      names_.Add(other.names_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListStatsRequest : pb::IMessage<ListStatsRequest> {
    private static readonly pb::MessageParser<ListStatsRequest> _parser = new pb::MessageParser<ListStatsRequest>(() => new ListStatsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStatsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatsRequest(ListStatsRequest other) : this() {
      match_ = other.match_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatsRequest Clone() {
      return new ListStatsRequest(this);
    }

    /// <summary>Field number for the "match" field.</summary>
    public const int MatchFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_match_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> match_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Match {
      get { return match_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStatsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStatsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!match_.Equals(other.match_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= match_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      match_.WriteTo(output, _repeated_match_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += match_.CalculateSize(_repeated_match_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStatsRequest other) {
      if (other == null) {
        return;
      }
      match_.Add(other.match_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            match_.AddEntriesFrom(input, _repeated_match_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListStatsResponse : pb::IMessage<ListStatsResponse> {
    private static readonly pb::MessageParser<ListStatsResponse> _parser = new pb::MessageParser<ListStatsResponse>(() => new ListStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatsResponse(ListStatsResponse other) : this() {
      names_ = other.names_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatsResponse Clone() {
      return new ListStatsResponse(this);
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!names_.Equals(other.names_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= names_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      names_.WriteTo(output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += names_.CalculateSize(_repeated_names_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStatsResponse other) {
      if (other == null) {
        return;
      }
      names_.Add(other.names_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListPoliciesRequest : pb::IMessage<ListPoliciesRequest> {
    private static readonly pb::MessageParser<ListPoliciesRequest> _parser = new pb::MessageParser<ListPoliciesRequest>(() => new ListPoliciesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPoliciesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPoliciesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPoliciesRequest(ListPoliciesRequest other) : this() {
      iris_ = other.iris_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPoliciesRequest Clone() {
      return new ListPoliciesRequest(this);
    }

    /// <summary>Field number for the "iris" field.</summary>
    public const int IrisFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_iris_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> iris_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Iris {
      get { return iris_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPoliciesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPoliciesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!iris_.Equals(other.iris_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= iris_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      iris_.WriteTo(output, _repeated_iris_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += iris_.CalculateSize(_repeated_iris_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPoliciesRequest other) {
      if (other == null) {
        return;
      }
      iris_.Add(other.iris_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            iris_.AddEntriesFrom(input, _repeated_iris_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListPoliciesResponse : pb::IMessage<ListPoliciesResponse> {
    private static readonly pb::MessageParser<ListPoliciesResponse> _parser = new pb::MessageParser<ListPoliciesResponse>(() => new ListPoliciesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListPoliciesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPoliciesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPoliciesResponse(ListPoliciesResponse other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListPoliciesResponse Clone() {
      return new ListPoliciesResponse(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ahghee.Grpc.Node> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::Ahghee.Grpc.Node.Parser);
    private readonly pbc::RepeatedField<global::Ahghee.Grpc.Node> nodes_ = new pbc::RepeatedField<global::Ahghee.Grpc.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ahghee.Grpc.Node> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListPoliciesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListPoliciesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListPoliciesResponse other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadFile : pb::IMessage<LoadFile> {
    private static readonly pb::MessageParser<LoadFile> _parser = new pb::MessageParser<LoadFile>(() => new LoadFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadFile(LoadFile other) : this() {
      type_ = other.type_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadFile Clone() {
      return new LoadFile(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadFile other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadFileResponse : pb::IMessage<LoadFileResponse> {
    private static readonly pb::MessageParser<LoadFileResponse> _parser = new pb::MessageParser<LoadFileResponse>(() => new LoadFileResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadFileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ahghee.Grpc.TypesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadFileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadFileResponse(LoadFileResponse other) : this() {
      progress_ = other.progress_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadFileResponse Clone() {
      return new LoadFileResponse(this);
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 1;
    private long progress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 2;
    private long length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadFileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadFileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Progress != other.Progress) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Progress != 0L) hash ^= Progress.GetHashCode();
      if (Length != 0L) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Progress != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Progress);
      }
      if (Length != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Progress != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Progress);
      }
      if (Length != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadFileResponse other) {
      if (other == null) {
        return;
      }
      if (other.Progress != 0L) {
        Progress = other.Progress;
      }
      if (other.Length != 0L) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Progress = input.ReadInt64();
            break;
          }
          case 16: {
            Length = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
